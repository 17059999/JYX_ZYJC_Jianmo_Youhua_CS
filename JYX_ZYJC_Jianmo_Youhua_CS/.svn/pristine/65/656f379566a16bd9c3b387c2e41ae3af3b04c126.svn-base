using Bentley.ApplicationFramework.UI;
using Bentley.Building.Mechanical;
using Bentley.Building.Mechanical.Api;
using Bentley.MstnPlatformNET;
using Bentley.MstnPlatformNET.WinForms;
using Bentley.UI.Controls.WinForms.GroupPanel;
using System.Drawing;

namespace JYX_ZYJC_Jianmo_Youhua_CS
{
    class SupportView : PipeSupportContainerView
    #region 第一版

    //{
    //    public SupportForm supportForm;

    //    public SupportView(AddIn addIn, string toolName) : base(addIn, toolName)
    //    {
    //    }

    //    private void AddSupportGroupPanel()
    //    {
    //        this.supportForm = new SupportForm();
    //        supportForm.Dock = DockStyle.Top;
    //        GroupPanel group_panel = new GroupPanel();
    //        group_panel.Title = "支吊架";
    //        group_panel.DisplayState = GroupDisplayState.Closed;
    //        group_panel.Tag = ToolAdapter.GroupPanelOptions.AutoClose;
    //        group_panel.ContentPanel.Controls.Add(this.supportForm);
    //        base.ToolAdapter.GroupPanels.Controls.Add(group_panel);
    //    }

    //    #region MyRegion

    //    //public override Adapter ToolFrameAdapter
    //    //{
    //    //    get
    //    //    {
    //    //        if (null == base.ToolAdapter && null != base.ResourceManager)
    //    //        {
    //    //            base.ToolAdapter = new ToolAdapter(base.AddIn, base.ToolName, this.PropertyContainer, null);
    //    //            BMECApi arg_3B_0 = BMECApi.Instance;
    //    //            BMdDiscipline bMdDiscipline = BMdDiscipline.bmdDiscipline_Piping;
    //    //            BMECPropertyContainer bMECPropertyContainer = this.PropertyContainer as BMECPropertyContainer;
    //    //            if (null != bMECPropertyContainer)
    //    //            {
    //    //                bMdDiscipline = bMECPropertyContainer.Object.NetworkSysInfo.DisciplineEnum;
    //    //            }
    //    //            this.AddToolStrip();
    //    //            base.AddSettingsGroupPanel();
    //    //            if (bMdDiscipline == BMdDiscipline.bmdDiscipline_HVAC)
    //    //            {
    //    //                base.AddPortSettingsGroupPanel();
    //    //            }
    //    //            else
    //    //            {
    //    //                //string content = JYX_Guandao_CLR.CliPublicMethod.get_opm_config_string("OPM_DIR_ASSEMBLIES");
    //    //                string content = @"C:\Program Files\Bentley\OpenPlant CONNECT Edition\OpenPlantModeler\Assemblies\";
    //    //                Assembly dll = Assembly.LoadFile(content + @"MechAddin.dll");
    //    //                Type linear_container_view_type = dll.GetType("Bentley.Building.Mechanical.LinearContainerView", true);

    //    //                Type[] params_type = new Type[0];
    //    //                ParameterModifier[] parameter_modifier = new ParameterModifier[0];
    //    //                BindingFlags flag = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static;
    //    //                MethodInfo method = linear_container_view_type.GetMethod("AddAutoFittingGroupPanel", flag, null, params_type, parameter_modifier);
    //    //                object value = method.Invoke(this, null);


    //    //                this.AddSupportGroupPanel();
    //    //            }
    //    //            base.AddPropertiesPaneGroupPanel();
    //    //            base.WindowContentHost.CanDockHorizontally = false;
    //    //            base.SetFormClosingEvents(base.ToolAdapter);
    //    //        }
    //    //        return base.ToolAdapter;
    //    //    }
    //    //}
    //    #endregion



    //    protected override void Dispose([MarshalAs(UnmanagedType.U1)] bool flag)
    //    {
    //        if (flag)
    //        {
    //            try
    //            {
    //                return;
    //            }
    //            finally
    //            {
    //                base.Dispose(true);
    //            }
    //        }
    //        base.Dispose(false);
    //    }
    //}
    #endregion

    {
        private static SupportView s_instance = null;

        public SupportForm supportForm;

        public override Adapter ToolFrameAdapter
        {
            get
            {
                if (null == base.ToolAdapter)
                {
                    BMECApi arg_0E_0 = BMECApi.Instance;
                    base.ToolAdapter = new ToolAdapter(base.AddIn, base.ToolName, this.PropertyContainer, null);
                    this.AddToolStrip();
                    this.AddPreviewGroupPanel();
                    if (!this.IS_ElbowSupport_SupportTOSupport())
                    {
                        this.AddSupportPaneGroupPanel();
                    }
                    this.AddSupportPaneGroupPanel_();
                    base.AddPropertiesPaneGroupPanel();
                    base.WindowContentHost.CanDockHorizontally = false;
                    base.SetFormClosingEvents(base.ToolAdapter);
                }
                return base.ToolAdapter;
            }
        }



        public static new SupportView Instance
        {
            get
            {
                return SupportView.s_instance;
            }
        }


        protected void AddSupportPaneGroupPanel_()
        {
            this.supportForm = new SupportForm();
            Color white = Color.White;
            this.supportForm.BackColor = white;
            GroupPanel groupPanel = new GroupPanel();
            groupPanel.Title = base.ResourceManager.GetString("Auto-Placement");
            groupPanel.Tag = ToolAdapter.GroupPanelOptions.AutoClose;
            groupPanel.ContentPanel.Controls.Add(this.supportForm);
            base.ToolAdapter.GroupPanels.Controls.Add(groupPanel);
        }

        public SupportView(AddIn addIn, string toolName) : base(addIn, toolName)
        {
            try
            {
                SupportView.s_instance = this;
            }
            catch
            {
                base.Dispose(true);
                throw;
            }
        }

    }
}
