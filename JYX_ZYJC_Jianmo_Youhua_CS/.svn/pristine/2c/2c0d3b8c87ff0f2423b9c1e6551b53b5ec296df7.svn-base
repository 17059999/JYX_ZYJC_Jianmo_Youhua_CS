<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfXZ3CGpk
        ZSZtaWk6dm1vRnJpaj50bG00bWdnSm5qai5ybG0YppyeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1cnIIcG1tKHBs
        bDxuaWp2a2VmWnNtbkBzbW4qoZiZAnVvcC4AAAAAa2NlEGhkZSxqY2Q6a2ZnbHBrbFpyb28kb2xsGqai
        ogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbmlqGm9o
        aS5xbG0sbmprOm5raya1sbEAbWpqRG5rbBIAAAAAAAAAAHhvcDAAAAAAAAAAAAAAAABkYWEeZ2NjEGVj
        YwZnZGQuaWRlMG9raypuamoodnNzBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpl
        ZhRtZmdgb2prPGhjZDptaGhiZWRkKGllZShmZWVwZWRkzWVlZY1qZ2cqa2VmMG1naFZmYWIia2VmJGxm
        ZyhnYWIgaGNkUmhlZS5rZWYsbWdoQGliZF5nZGQsbGZnVmplZkidmZkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC/t7gAbmlqLG9qayiamJcKgX59LHFvbzBpaWl8fn5+HHh2djJkZGT7ZGRk/2VlZfdzcXFQnZqaCnNu
        bz5yb28GbmxsBm9sbAZua2sGc3BwBmRhYTZtamoGcG1tBnNycQhkYWE2amdnCGhlZQplY2Moa2RlDgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHt7ewJsamo4cWxtDAAAAAB5d3cgeXh4IGhoaDRjY2P/ZGRk+WRkZP1lZWX/ZGRk/2Nk
        ZP9oaGhiAAAAAHZtbjQAAAAAAAAAAAAAAAAAAAAAAAAAAGhnZw5lZGQSAAAAAAAAAACRiIoAYlxdLnpx
        cwAAAAAAZGFhHHFvbxYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAdXV1AnFvbzaCgoICAAAAAG1pahJycHAuAAAAAGtrayZkZGT/ZWVl/2Rk
        ZP9kZGT/ZGRk/2JkZP9paWlWAAAAAHhucDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlY2MiAAAAAAAA
        AAAAAAAAbGdnAmJdXigAAAAAAAAAAHJvbxJraWkaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXlJQAb21tNJ2cnAIAAAAA4uHgAHBrbD7h2tsAAAAAAGlp
        aRhkZGTNZGRk/2RkZP9jY2PvZGRk62lmZmxoaGgYAAAAAHVsbTIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABnZWUWZmZmCgAAAAAAAAAAAAAAAGBdXRBkX2AaAAAAAAAAAABlY2MaZ2RkJgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnZGQ4eHV1MHl2diiAeXoqb21tSnd0
        dDx7eHgqeHV1KnRycip1dXUqgYGBv2hoaMdsbGxWcm9vSnZ2dix3dHQqeHV1KG5ra0xtamokbm1tJG1t
        bSJubW0kbmxsIm1tbSJsbGwiZWJiPHBpaiJvbGwibmhpJGJeXiJlYWFQbGZnJmJfXyJmYmKhZ2Rk0Wxs
        bAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbW1QBsamgS172sAPzx
        5wC6trYAbmpqKpZoSzSKVjdEklE1UJVRM1qUTSxeimdQGAAAAAAAAAAAl2VJHpJLLGSTSipyk0sodJRM
        KHSWTClwlUwqbI5KJ2iNSShkk04wYJVPMlqWTzNQi1Q2RJFgRDq3kXcOAAAAAAAAAABubGwIaGdnFtS6
        qgBsYmUqZWNhYGdnZyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQXD8wjksnbIxSMn7s388AjmE+LI9C
        Gs2MPhbdiT4a85BMJ4NoZmYei4J+HIg5Ev2LNQr/izQK/4o1C/+KNAr/mF5KPLSxsUyojnQYiTkS64s0
        C/+KNQn/izUJ/4s1Cf+LNAr/izQL/4s0Cf+MNAn/jDQK/4o0C/+KNAv/jDQL/4o0Cf+KPhrb+N/PAgAA
        AACef2AMiEQgoYs9Ge+MPhrpjD8X15BAHMeKQBuxjEMdmZFIJoeRSilukVM5RPTczQCKNhHJjTUL/45A
        GuHx6M0AjEIfo4w0C/+KNQv/iTQL/5JEHq9sbGwsw56FHIYzC/+MNAz/jDQL/4s0C/+JMwr/q4t/RLKx
        sTyPUzJQizQL/4s0C/+LNQv/izUL/4s0C/+MNQz/jDQM/4s1C/+KNQv/izUL/4o0C/+LNAv/jDQL/4w0
        DP+JMgr/to95HgAAAACOTStqijQK/4s0DP+LNAz/izQM/4w0DP+KNAz/izQL/4s0DP+MNAv/izQK/41M
        LWaKMwzNizQL/41CHcergmkSijcQ94s0DP+LNAz/izQM/4w/GOf55tYApXVaKogzCv+LNQz/jDUM/4w1
        DP+GMwv/vKOTKLOzswyQSyhwizQL/4w1DP+MNQz/jDUM/4s0C/+MOxXtjkAY240/GNeNPhjTjkAZ14o4
        D/mMNQz/jDUM/4w1DP+LNAr/lWJHOAAAAACUTCtwizQK/4w0DP+LNAz/izQL/4w0C/+LNAz/ijQL/4o0
        Cv+LNQv/izQL/4tDHa+KNArNizQL/5BCHq2NSShojDQK/4w1C/+MNQz/izUL/4k0DP+ndVwmkVxCOIs0
        C/+MNAv/jDUM/4s0DP+HNQ7/4cWyEAAAAACLRSKFjDQL/4s0DP+MNQz/jDUL/4s0Cv+LTCpuAAAAAAAA
        AAAAAAAAAAAAAJJEIaeLNAv/jDQL/4s0C/+KNAr/llU2RgAAAACPTSpmijQK/4s0DP+MNQz/izUL/4xA
        GtWOVDJQjlAwVo5FJKOKNQr/ijQL/49CHceLNAvNijUL/5JGIpmLQhu5izUL/4s0C/+LNAv/jDQL/4s0
        C/+TSihui1c6Oow0C/+MNAv/jDQL/4s1Cv+LOhL/8dLACAAAAACPRCGVijUL/4w0C/+LNAv/izQL/4s0
        C/+SSyxkAAAAAAAAAAAAAAAAAAAAAJBVNUyRSSOFk0okh5BJI4WSSiSFjFdAJHd3d3iMTyxiizQK/4s0
        C/+LNAv/jDUL/49BG9EAAAAAAAAAAJZfSzCQQx3Bj0EdwZJKKpmLNAvNizUL/5NNJ5eJOhP1izQL/4w0
        DP+LNAv/jDUM/4s0C/+NQhu5k2JHNos0C/+LNQv/jDUM/4w1Cv+NPRT9mouIFnp3dxKPRCGdizUL/4w1
        DP+MNQz/jDUM/4s0C/+QTi9kp6apAHdxcgB3cnMA18/RAHNzcwBzc3MAfX19AHp5eUx2dnZ2dXV1wXZ2
        du2OTy9eizML/4w1DP+MNQz/jDQL/44/GeUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLNAvNjDUK/49R
        LtGKNAv/jDQL/4w6EveLNw/7izQL/4s1C/+KNw/5o3NZQoszC/+LNQv/jDUM/4s1C/+KOxL/ioGATHh2
        dliQRSGbizUL/4w1DP+MNQz/jDUL/4s0C/+OTjBkd3F0MnZxcTZ2cXI2dW9wOHBwcDZwcHA2cXFxNpyb
        m995eXn9dnZ2/3d3d++PUDBcijML/4w1DP+LNQz/izQL/45AGusAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACKNAvNjDQL/40+Ff+LNAv/izQM/45DHqeKQRq7izQL/4w0DP+LMwr/lFQ1pYgyC/+LNQv/jDQL/4w1
        DP+JNQ7/koqGRnZ2douPRSCVjTQL/4s0C/+MNAv/izQL/4s0C/+NTS5kAAAAAAAAAAAAAAAAAAAAAOLJ
        rQjWwaUUzK2UEpyRhzCRiH06gn98MnZ2dtuOTi1iizQL/4s0C/+LNAv/jDUL/4s/F+EAAAAAAAAAAJRn
        VxCXVjlKk1MyTpFZPD6KNAvNjDUL/4s1DP+MNAz/jDQJ/45RL1yLSixiizQL/4w0C/+MNAv/jTkQ/4s0
        Cv+MNQv/jDUM/4w1DP+IMwr/loR6QnZ3d8GPRiGHizQM/4w1DP+MNQz/jDUM/4o0Cv+KSytmAAAAAAAA
        AAAAAAAAAAAAAIpCIJWIMwv/hjIJ/4YyCv+IMwn/i08vVnh4d82STStsizQK/4w1DP+MNQz/jDQL/41B
        Gc8AAAAAAAAAAItMKWqLNAv/jDQM/45CHb+HNQzNjTQL/4s1DP+MNAz/iDQL/5t/dDSCe3c8ijoS64s0
        C/+LNAv/ijQM/4s0DP+LNAz/jDUM/4s0C/+LMwr/kXJiRHV2ds2OSSR2iTQL/4w0DP+LNAz/jDUL/4o0
        C/+RUC9y+8y3Bv3Mtwb9zroG+9C7CI5DH7WKNQv/izQL/4s0DP+LNAv/k1Q4SnZ4d8eSSCR4izQL/4w0
        DP+LNQv/izUM/4s4D/WOQhnBjkAaz4k3DveLNAv/izQL/4pEH52OQRuvijQL/4w0C/+MNAz/jT8Z63h4
        eE52dXa7i0ckdos0Cv+MNQz/izQL/4s0DP+LNAz/jDQL/4s0C/+KMwr/j19BRnh4eOGPTS1gijQL/4s0
        C/+MNAv/izQL/4s0C/+LOBD/jDsV/4w7Ff+MOhX/izoU/4o0DP+LNQv/izQL/4s0C/+JMwn/lXFcRHZ2
        dsGSRCKHiTML/4o0C/+LNAv/izUM/4w0DP+LNAz/izUL/4o0C/+LNQz/ijMK/5BRMF6OUC9Kiz0X74k2
        Dv+LNAr/j0EauXd3d3J0dnb/g3pzVos5FOOLNAv/izQL/4o0C/+LNQz/izQL/4w1C/+LNAr/j1ExVHV1
        deuaZktAiTMK/4s1C/+LNQv/izQM/4s0DP+LNAz/ijUL/4w0DP+LNAz/ijUM/4s0DP+LNQv/izUL/4w0
        C/+HNQv/kYmCPnl2d8GKRyJ8ijML/4s0DP+LNAv/jDQL/4s0C/+LNAr/ijML/4o2D/+LPRfvikIgqbiJ
        eAgAAAAA/d/KAsuhiBSWalAujmBIKHV1dRh1dnbxdnZ11YlVM0yNQx21iz8aw40/GNWOPhfjizwW6Y49
        GfGNPhn1kVY1YHV1dd17enhGiEEdyYg2Dv+HNg3/hzUO/4c1Dv+HNQ//iTYP/4w2EP+LORH9ijwU/Y4/
        GP2NPxn3jD0X7Yo/Gt2LSCV+dHV1aHZ2dvOEeXE6jUcmfpFIJpORRyWDkEopcItMJ1qXWjpEnXBULNOv
        lxL+5M4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1dHRidXZ2/3h3drd2dnaLdnZ2dnV1
        dWR0dHRcdnZ2VHV1dU51dXVMdHR0TnZ2dt92dnbheXh4SpCIhEaTioVGlYyFRJWNhkakl40wkomEPOzT
        xQqGgoAue3l3QHx5eEJ/fHoednR0TnZ1dVx1dXVkd3Z2KnV1de2Af3/zdHZ2tXV2dkh6dnZkdnV1pYiC
        ggQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6trYAdHV1m3h3
        d/93d3f/d3d3/3Z2dv92dnb/d3d3/3Z2dv92dnb/d3d3/3d3d/93d3f/dnZ2/3Z2dv95dnb/dnR0n3d1
        dZt6dHVWf3h5Xod/gEJ3dHRwdXV17XV1dYF4c3R0fHZ3Zn13eGR5eHhWdHR0o3V1dfd9fX2ZdHR0q3d3
        d0x1dXWDdXV1LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAend3BHd1dal3d3f/dnZ2/3Z2dv92dnb/dnZ2/3Z2dv92dnb/dnZ2/3Z2du13d3fBdXV1kXZ2
        dpd5dnZkjoqKAHZ0dFKVk5MAAAAAAAAAAAAAAAAAhYWFAgAAAABzc3NKAAAAALOvsDqzsLEQeXR0Xndz
        dJNubm4IcXFxHHhzdCh5dHUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAISEhAR1dXWVdnZ2/3d3d/92dnb/dnZ2/3Z2dv92dnb5dXV153Z1
        dbOFgoICAAAAAAAAAAAAAAAAAAAAAHd3d0aQkJAAAAAAAAAAAAAAAAAAAAAAAHZzdCZxcXEeAAAAAAAA
        AAB7dHUGd3JzXnl2dgIAAAAAeHFyMnZzcyoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqqqoAdHR0WHZ2du12dnb/d3d3/3Z2
        dt11dXUaj4+PAHp3dwp3dHRGAAAAAAAAAAAAAAAAAAAAAHZ2dkaUlJQAAAAAAAAAAAAAAAAAdnNzAnhz
        dFQAAAAAAAAAAHFxcQx1cXFahXx+BHlycw56c3ROeHV1GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHd3
        dxZ1dXWZdnZ2+3d3d5d3eHiFfXp7VoJ7fEZ5d3dmeHh4bHp6ekaGfX5GgX5+Rnd3d4N9fX1If39/RoB+
        fkaAfn5GdnZ2g357e1SBfn5GeHh4cnZ2dnh8fHxOd3d3hXl1dUCXj5ECAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeHh4Inl3d1x9enpOeXp6WnNzc0J4eHgCc3NzOHZvcSoAAAAAAAAAAHd3
        d06Tk5MAAAAAAIKCggJwcHBKcXFxEnV1dRRycnJKdnN0RHp0dUp2dnZIg4ODBgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAfn4IeHh4RHt7e2J3eHizdnV1g3x1
        dmR7eHhmdnZ2InR0dE6GhoYKdXV1QHZ2dnBzc3NgdXV1mXd3d5d4eHhIfHV2KrCnqQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADBxMQAg39/EH13eDZ2dXVSd3Z2anl5eXB3d3dsd3d3YHZ2dkh6enooiIiIBgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA///n////AAD//8f///8AAP/+B////wAA//4H////AAD//g////8AAP//P//+fwAA////////
        AAD4YOAAOAcAABBg4AA4AQAAEGDgADgAAAAQYMD4ODAAAABgwPw4OAAAACDA/8g/AAAAIMD/CD8AAAAA
        gP/oPwAABgCA+Cg4AAAGAKD4KAAAAAUAoAAgAQAAhQCgACgBAAD8gKAAbP8AAP4/n//jfwAA/gAA88L/
        AAD/AAf/7/8AAP+AP////wAA/+H/////AAD/8P733/8AAP///////wAA///P8///AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>