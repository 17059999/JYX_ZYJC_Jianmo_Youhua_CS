using Bentley.Building.Mechanical.Api;
using Bentley.ECObjects.Instance;
using Bentley.MstnPlatformNET.InteropServices;
using Bentley.MstnPlatformNET.WinForms;
using Bentley.OpenPlantModeler.SDK.Utilities;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MOIE = Microsoft.Office.Interop.Excel;

namespace JYX_ZYJC_Jianmo_Youhua_CS
{
    public partial class ReportFrom : //Form
#if DEBUG
        Form
#else
        Adapter
#endif
    {
        //bool isSele = false;
        static bool isCailiao = true;
        public static ReportFrom reportFrom = null;
        public Dictionary<int, Dictionary<int, List<IECInstance>>> itemList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
        private static Bentley.Interop.MicroStationDGN.Application app1 = Utilities.ComApp;
        private static string path0 = app1.ActiveWorkspace.ConfigurationVariableValue("OPENPLANT_WORKSET_STANDARDS"); //相对路径
        //C:\ProgramData\Bentley\OpenPlant CONNECT Edition\Configuration\Workspaces\WorkSpace\WorkSets\OpenPlantMetric\Standards\OpenPlant
        public List<string> MsName = new List<string>();
        public Dictionary<string, List<string>> msJtName = new Dictionary<string, List<string>>();
        MOIE.Application app;
        public ReportFrom()
        {
            InitializeComponent();
            initialization();
        }

        /// <summary>
        /// 限制只能打开一个from
        /// </summary>
        /// <param name="isCai"></param>
        /// <returns></returns>
        public static ReportFrom instence(bool isCai)
        {
            isCailiao = isCai;
            if (reportFrom == null)
            {
                reportFrom = new ReportFrom();
            }
            else
            {
                reportFrom.Close();
                reportFrom = new ReportFrom();
            }
            return reportFrom;
        }

        /// <summary>
        /// 导出报表
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void button1_Click(object sender, EventArgs e)
        {
            ECInstanceList ecList = shaixuanEc();
            if (ecList == null)
            {
                return;
            }
            try
            {
                if (zlcomboBox1.Text.Equals("管道材料表"))
                {
                    itemList = fuzhi(ecList);
                    ExportExcel(itemList);
                }
                else if (zlcomboBox1.Text.Equals("隔热材料表"))
                {
                    itemList = grfuzhi(ecList);
                    grExportExcel(itemList);
                }
                else if (zlcomboBox1.Text.Equals("管道造价表") || zlcomboBox1.Text.Equals("管道造价汇总表"))
                {
                    itemList = zjfuzhi(ecList);
                    zjExportExcel(itemList);
                }
                else if (zlcomboBox1.Text.Equals("汇总材料表"))
                {
                    itemList = hzfuzhi(ecList);
                    hzExportExcel(itemList);
                }
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            finally
            {
                app.Quit();
            }
            //itemList = fuzhi(ecList);
            #region
            //Dictionary<int, string> dicPipeLine = new Dictionary<int, string>(); //与itemList字典类的key相同
            //Dictionary<int, List<pipingPro>> sxList = new Dictionary<int, List<pipingPro>>(); //筛选条件的集合
            //if (dataGridView1.Rows.Count > 0)
            //{
            //    #region 得到选择的管线编号
            //    for (int i = 0; i < dataGridView1.Rows.Count; i++)
            //    {
            //        bool b = Convert.ToBoolean(dataGridView1.Rows[i].Cells[0].Value);
            //        if (b)
            //        {
            //            dicPipeLine.Add(i, dataGridView1.Rows[i].Cells["PipeLineName"].Value.ToString());
            //        }
            //    }
            //    if (dicPipeLine.Count == 0)
            //    {
            //        MessageBox.Show("请至少选择一个管线编号！");
            //        return;
            //    }
            //    #endregion
            //    #region 根据选择的管线编号 查找勾选的元件
            //    foreach (KeyValuePair<int, string> kv in dicPipeLine)
            //    {
            //        List<pipingPro> proList = new List<pipingPro>();
            //        for (int j = 0; j < dataGridView2.Rows.Count; j++)
            //        {
            //            bool b1 = Convert.ToBoolean(dataGridView2.Rows[j].Cells[0].Value);
            //            if (b1)
            //            {
            //                string pipeLine = dataGridView2.Rows[j].Cells["pipeLineName1"].Value.ToString();
            //                if (pipeLine == kv.Value)
            //                {
            //                    pipingPro pipClass = new pipingPro();
            //                    string ecName = dataGridView2.Rows[j].Cells["ecName"].Value.ToString();
            //                    double dn = Convert.ToDouble(dataGridView2.Rows[j].Cells["DN"].Value);
            //                    pipClass.pipeLineName = pipeLine;
            //                    pipClass.ecName = ecName;
            //                    pipClass.DN = dn;
            //                    proList.Add(pipClass);
            //                }
            //            }
            //        }
            //        if (proList.Count > 0)
            //        {
            //            sxList.Add(kv.Key, proList);
            //        }
            //    }
            //    if (sxList.Count == 0)
            //    {
            //        MessageBox.Show("所选管线编号上没有选择相应的元件！");
            //        return;
            //    }
            //    #endregion
            //    #region 得到筛选后的数据
            //    Dictionary<int, Dictionary<int, List<IECInstance>>> sxItemList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
            //    foreach (KeyValuePair<int, List<pipingPro>> kv in sxList)
            //    {
            //        Dictionary<int, List<IECInstance>> sxIecList = new Dictionary<int, List<IECInstance>>();
            //        foreach (KeyValuePair<int, List<IECInstance>> kv1 in itemList[kv.Key])
            //        {
            //            string pipeLineName = kv1.Value[0]["LINENUMBER"].StringValue;
            //            string ecName = kv1.Value[0].ClassDefinition.Name;
            //            double dn = kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue;
            //            bool isCz = false;
            //            foreach (pipingPro proClass in kv.Value)
            //            {
            //                if (pipeLineName == proClass.pipeLineName && ecName == proClass.ecName && dn == proClass.DN)
            //                {
            //                    isCz = true;
            //                }
            //            }
            //            if (isCz)
            //            {
            //                sxIecList.Add(kv1.Key, kv1.Value);
            //            }
            //        }
            //        sxItemList.Add(kv.Key, sxIecList);
            //    }
            //    #endregion
            //    ExportExcel(itemList);
            //}
            #endregion
            //ExportExcel(itemList);
            #region 导出报表 （没有筛选条件）
            //ExportMaterials exClass = new ExportMaterials();
            //if(radioButton1.Checked==true)
            //{
            //    isSele = false;
            //}
            //if(radioButton2.Checked==true)
            //{
            //    isSele = true;
            //}
            //if(isCailiao)
            //{
            //    exClass.selectExportExcel(isSele);
            //}
            //else
            //{
            //    exClass.selectEquipmentExcel(isSele);
            //}
            #endregion
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void dataGridView2_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        /// <summary>
        /// 窗体加载时，给DataGridView附加checkBox表头以及给dataGridView赋值
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void ReportFrom_Load(object sender, EventArgs e)
        {
            AddCheckBoxToDataGridView.dgv = dataGridView1;
            AddCheckBoxToDataGridView.AddFullSelect();
            AddCheckBoxToDataGridView.dgv1 = dataGridView2;
            AddCheckBoxToDataGridView.AddFullSelect1();
            qxcheckBox1.Checked = true;
            zlcomboBox1.DataSource = MsName;
            zlcomboBox1.SelectedIndex = 1;
            wlbmGroupcheckBox1.Checked = true;
            dataGridView2.Visible = false;
            //zlcomboBox1.Text = "管道材料表";
            //lxcomboBox1.Items = msJtName[zlcomboBox1.Text.ToString()];
            ECInstanceList ecList = DgnUtilities.GetAllInstancesFromDgn();
            itemList = fuzhi(ecList);
            if (itemList.Count > 0)
            {
                foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                {
                    dataGridView1.Rows.Add(true, kv.Value[0][0]["LINENUMBER"].StringValue, kv.Value[0][0]["SPECIFICATION"].StringValue);
                    foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                    {
                        dataGridView2.Rows.Add(true, kv1.Value[0].ClassDefinition.Name, kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue.ToString(), kv1.Value[0]["LINENUMBER"].StringValue);
                    }
                }
            }
        }

        /// <summary>
        /// 得到要导出的数据，并按字典类格式存储
        /// </summary>
        /// <param name="ecList"></param>
        /// <returns></returns>
        public Dictionary<int, Dictionary<int, List<IECInstance>>> fuzhi(ECInstanceList ecList)
        {
            Dictionary<int, Dictionary<int, List<IECInstance>>> dicEcList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
            if (ecList.Count > 0)
            {
                Dictionary<int, string> lineList = new Dictionary<int, string>();
                Dictionary<int, List<IECInstance>> iecDicInstanceList = new Dictionary<int, List<IECInstance>>();
                #region 将数据按管线编号进行分组
                int keyNumber = 0;
                foreach (IECInstance ec in ecList)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(ec, "PIPING_COMPONENT", true);
                    if (ec.GetPropertyValue("LINENUMBER") != null &&ec.GetPropertyValue("SPECIFICATION")!=null)
                    {
                        b = true;
                    }
                    if (b)
                    {
                        bool isc = false;
                        string fenlei = "";
                        if (ec.GetPropertyValue("CERI_Classify") == null)
                        {
                            isc = true;
                        }
                        else
                        {
                            fenlei = ec["CERI_Classify"].StringValue;
                        }
                        if (fenlei == "材料" || fenlei == "cailiao" || isc)
                        {
                            string LineNumber = ec["LINENUMBER"].StringValue;
                            if (lineList.Count == 0)
                            {
                                lineList.Add(keyNumber, LineNumber);
                                List<IECInstance> iecList = new List<IECInstance>();
                                iecList.Add(ec);
                                iecDicInstanceList.Add(keyNumber, iecList);
                            }
                            else
                            {
                                bool b1 = lineList.ContainsValue(LineNumber);
                                if (!b1)
                                {
                                    keyNumber += 1;
                                    lineList.Add(keyNumber, LineNumber);
                                    List<IECInstance> iecList = new List<IECInstance>();
                                    iecList.Add(ec);
                                    iecDicInstanceList.Add(keyNumber, iecList);
                                }
                                else
                                {
                                    int indexKey = 0;
                                    foreach (KeyValuePair<int, string> kv in lineList)
                                    {
                                        if (kv.Value == LineNumber)
                                        {
                                            indexKey = kv.Key;
                                        }
                                    }
                                    iecDicInstanceList[indexKey].Add(ec);
                                }
                            }
                        }
                    }
                }
                #endregion
                Dictionary<int, Dictionary<int, List<IECInstance>>> rowIecList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
                if (iecDicInstanceList.Count > 0)
                {
                    foreach (KeyValuePair<int, List<IECInstance>> kv in iecDicInstanceList)
                    {
                        Dictionary<int, List<IECInstance>> rowList = new Dictionary<int, List<IECInstance>>();
                        #region 将元件按ecClass和DN进行分组
                        int rowm = 0;
                        foreach (IECInstance iec in iecDicInstanceList[kv.Key])
                        {

                            string ecName = iec.ClassDefinition.Name;
                            double dn = 0;
                            if (iec.GetPropertyValue("NOMINAL_DIAMETER") != null)
                            {
                                dn = iec["NOMINAL_DIAMETER"].DoubleValue;
                            }
                            if (rowList.Count == 0)
                            {
                                List<IECInstance> iecList = new List<IECInstance>();
                                iecList.Add(iec);
                                rowList.Add(rowm, iecList);
                            }
                            else
                            {
                                int kv_key = 0;
                                bool bbb = true;
                                foreach (KeyValuePair<int, List<IECInstance>> kv1 in rowList)
                                {
                                    foreach (IECInstance iecinstan in kv1.Value)
                                    {
                                        string ecName1 = iecinstan.ClassDefinition.Name;
                                        double dn1 = 0;
                                        if (iecinstan.GetPropertyValue("NOMINAL_DIAMETER") != null)
                                        {
                                            dn1 = iecinstan["NOMINAL_DIAMETER"].DoubleValue;
                                        }
                                        if (ecName == ecName1 && dn == dn1)
                                        {
                                            bbb = false;
                                            kv_key = kv1.Key;
                                        }
                                    }
                                }
                                if (bbb)
                                {
                                    rowm++;
                                    List<IECInstance> iecList = new List<IECInstance>();
                                    iecList.Add(iec);
                                    rowList.Add(rowm, iecList);
                                }
                                else
                                {
                                    rowList[kv_key].Add(iec);
                                }
                            }

                        }
                        rowIecList.Add(kv.Key, rowList);
                        #endregion
                    }

                    dicEcList = rowIecList;
                }
            }
            return dicEcList;
        }

        public Dictionary<int, Dictionary<int, List<IECInstance>>> grfuzhi(ECInstanceList ecList)
        {
            Dictionary<int, Dictionary<int, List<IECInstance>>> dicEcList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
            if (ecList.Count > 0)
            {
                Dictionary<int, string> lineList = new Dictionary<int, string>();
                Dictionary<int, List<IECInstance>> iecDicInstanceList = new Dictionary<int, List<IECInstance>>();
                #region 将数据按管线编号进行分组
                int keyNumber = 0;
                foreach (IECInstance ec in ecList)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(ec, "PIPING_COMPONENT", true);
                    if (ec.GetPropertyValue("LINENUMBER") != null && ec.GetPropertyValue("SPECIFICATION") != null)
                    {
                        b = true;
                    }
                    if (b)
                    {
                        bool isc = false;
                        string fenlei = "";
                        if (ec.GetPropertyValue("CERI_Classify") == null)
                        {
                            isc = true;
                        }
                        else
                        {
                            fenlei = ec["CERI_Classify"].StringValue;
                        }
                        if (fenlei == "材料" || fenlei == "cailiao" || isc)
                        {
                            string LineNumber = ec["LINENUMBER"].StringValue;
                            if (lineList.Count == 0)
                            {
                                lineList.Add(keyNumber, LineNumber);
                                List<IECInstance> iecList = new List<IECInstance>();
                                iecList.Add(ec);
                                iecDicInstanceList.Add(keyNumber, iecList);
                            }
                            else
                            {
                                bool b1 = lineList.ContainsValue(LineNumber);
                                if (!b1)
                                {
                                    keyNumber += 1;
                                    lineList.Add(keyNumber, LineNumber);
                                    List<IECInstance> iecList = new List<IECInstance>();
                                    iecList.Add(ec);
                                    iecDicInstanceList.Add(keyNumber, iecList);
                                }
                                else
                                {
                                    int indexKey = 0;
                                    foreach (KeyValuePair<int, string> kv in lineList)
                                    {
                                        if (kv.Value == LineNumber)
                                        {
                                            indexKey = kv.Key;
                                        }
                                    }
                                    iecDicInstanceList[indexKey].Add(ec);
                                }
                            }
                        }
                    }
                }
                #endregion
                Dictionary<int, Dictionary<int, List<IECInstance>>> rowIecList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
                if (iecDicInstanceList.Count > 0)
                {
                    foreach (KeyValuePair<int, List<IECInstance>> kv in iecDicInstanceList)
                    {
                        Dictionary<int, List<IECInstance>> rowList = new Dictionary<int, List<IECInstance>>();
                        #region 将元件按ecClass和DN进行分组
                        int rowm = 0;
                        foreach (IECInstance iec in iecDicInstanceList[kv.Key])
                        {

                            string ecName = iec.ClassDefinition.Name;
                            double dn = 0;
                            if (iec.GetPropertyValue("NOMINAL_DIAMETER") != null)
                            {
                                dn = iec["NOMINAL_DIAMETER"].DoubleValue;
                            }
                            if (rowList.Count == 0)
                            {
                                List<IECInstance> iecList = new List<IECInstance>();
                                iecList.Add(iec);
                                rowList.Add(rowm, iecList);
                            }
                            else
                            {
                                int kv_key = 0;
                                bool bbb = true;
                                bbb = grShaixuan(iec, rowList, out kv_key);
                                #region
                                //foreach (KeyValuePair<int, List<IECInstance>> kv1 in rowList)
                                //{
                                //    foreach (IECInstance iecinstan in kv1.Value)
                                //    {
                                //        string ecName1 = iecinstan.ClassDefinition.Name;
                                //        double dn1 = 0;
                                //        if (iecinstan.GetPropertyValue("NOMINAL_DIAMETER") != null)
                                //        {
                                //            dn1 = iecinstan["NOMINAL_DIAMETER"].DoubleValue;
                                //        }
                                //        if (ecName == ecName1 && dn == dn1)
                                //        {
                                //            bbb = false;
                                //            kv_key = kv1.Key;
                                //        }
                                //    }
                                //}
                                #endregion
                                if (bbb)
                                {
                                    rowm++;
                                    List<IECInstance> iecList = new List<IECInstance>();
                                    iecList.Add(iec);
                                    rowList.Add(rowm, iecList);
                                }
                                else
                                {
                                    rowList[kv_key].Add(iec);
                                }
                            }

                        }
                        rowIecList.Add(kv.Key, rowList);
                        #endregion
                    }

                    dicEcList = rowIecList;
                }
            }
            return dicEcList;
        }

        public Dictionary<int, Dictionary<int, List<IECInstance>>> zjfuzhi(ECInstanceList ecList)
        {
            Dictionary<int, Dictionary<int, List<IECInstance>>> dicEcList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
            int keyNumber = 0;
            if (zlcomboBox1.Text.Equals("管道造价汇总表"))
            {
                if (wlbmGroupcheckBox1.Checked)
                {
                    foreach (IECInstance iechz in ecList)
                    {
                        bool bz = false;
                        if (iechz.GetPropertyValue("LINENUMBER") != null&&iechz.GetPropertyValue("SPECIFICATION") !=null)
                        {
                            bz = true;
                        }
                        if (bz)
                        {
                            string pipNumberName1 = iechz["LINENUMBER"].StringValue;
                            bool isCz1 = false;
                            int key1 = 0;

                            foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kvs in dicEcList)
                            {
                                string pN1 = kvs.Value[0][0]["LINENUMBER"].StringValue;
                                if (pipNumberName1.Equals(pN1))
                                {
                                    isCz1 = true;
                                    key1 = kvs.Key;
                                }
                            }
                            if (isCz1)
                            {
                                int zkey = 0;
                                bool isz = false;
                                string wlbm = "";
                                if (iechz.GetPropertyValue("CERI_MAT_GRADE") != null)
                                {
                                    wlbm = iechz["CERI_MAT_GRADE"].StringValue;
                                }
                                else
                                {
                                    if (iechz.GetPropertyValue("GRADE") != null)
                                    {
                                        wlbm = iechz["GRADE"].StringValue;
                                    }
                                }
                                foreach (KeyValuePair<int, List<IECInstance>> kvz in dicEcList[key1])
                                {
                                    if (wlbm != "" || wlbm != null)
                                    {
                                        string wlbm1 = "";
                                        if (kvz.Value[0].GetPropertyValue("CERI_MAT_GRADE") != null)
                                        {
                                            wlbm1 = kvz.Value[0]["CERI_MAT_GRADE"].StringValue;
                                        }
                                        else
                                        {
                                            if (kvz.Value[0].GetPropertyValue("GRADE") != null)
                                            {
                                                wlbm1 = kvz.Value[0]["GRADE"].StringValue;
                                            }
                                        }
                                        if (wlbm.Equals(wlbm1))
                                        {
                                            isz = true;
                                            zkey = kvz.Key;
                                        }
                                    }
                                    else
                                    {
                                        bool isK = zjBj(iechz, kvz.Value[0]);
                                        if (isK)
                                        {
                                            isz = true;
                                            zkey = kvz.Key;
                                        }
                                    }
                                }
                                if (isz)
                                {
                                    dicEcList[key1][zkey].Add(iechz);
                                }
                                else
                                {
                                    List<IECInstance> zList = new List<IECInstance>();
                                    zList.Add(iechz);
                                    dicEcList[key1].Add(dicEcList[key1].Count, zList);
                                }
                            }
                            else
                            {
                                Dictionary<int, List<IECInstance>> dicList = new Dictionary<int, List<IECInstance>>();
                                List<IECInstance> insList = new List<IECInstance>();
                                insList.Add(iechz);
                                dicList.Add(0, insList);
                                dicEcList.Add(keyNumber, dicList);
                                keyNumber++;
                            }
                        }
                    }
                    return dicEcList;
                }
            }
            foreach (IECInstance iec in ecList)
            {
                bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPING_COMPONENT", true);
                if (iec.GetPropertyValue("LINENUMBER") != null)
                {
                    b = true;
                }
                if (b)
                {
                    string pipeNumberName = iec["LINENUMBER"].StringValue;
                    bool isCz = false;
                    int key = 0;

                    foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in dicEcList)
                    {
                        string pN = kv.Value[0][0]["LINENUMBER"].StringValue;
                        if (pipeNumberName.Equals(pN))
                        {
                            isCz = true;
                            key = kv.Key;
                        }
                    }
                    if (isCz)
                    {
                        List<IECInstance> iecli = new List<IECInstance>();
                        iecli.Add(iec);
                        dicEcList[key].Add(dicEcList[key].Count, iecli);
                    }
                    else
                    {
                        Dictionary<int, List<IECInstance>> dicList = new Dictionary<int, List<IECInstance>>();
                        List<IECInstance> insList = new List<IECInstance>();
                        insList.Add(iec);
                        dicList.Add(0, insList);
                        dicEcList.Add(keyNumber, dicList);
                        keyNumber++;
                    }
                }
            }
            return dicEcList;
        }

        public Dictionary<int, Dictionary<int, List<IECInstance>>> hzfuzhi(ECInstanceList ecList)
        {
            Dictionary<int, Dictionary<int, List<IECInstance>>> dicEcList = new Dictionary<int, Dictionary<int, List<IECInstance>>>();
            if (ecList.Count > 0)
            {
                #region 按物料编码进行分组
                int keyNum = 0;
                foreach (IECInstance iec in ecList)
                {
                    bool b = false;
                    if (iec.GetPropertyValue("LINENUMBER") != null&&iec.GetPropertyValue("SPECIFICATION")!=null)
                    {
                        bool isc = false;
                        string fenlei = "";
                        if (iec.GetPropertyValue("CERI_Classify") == null)
                        {
                            isc = true;
                        }
                        else
                        {
                            fenlei = iec["CERI_Classify"].StringValue;
                        }
                        if (fenlei == "材料" || fenlei == "cailiao" || isc)
                        {
                            b = true;
                        }

                    }
                    if (b)
                    {
                        string wlbm = "";
                        if (iec.GetPropertyValue("CERI_MAT_GRADE") != null)
                        {
                            wlbm = iec["CERI_MAT_GRADE"].StringValue;
                        }
                        else
                        {
                            if (iec.GetPropertyValue("GRADE") != null)
                            {
                                wlbm = iec["GRADE"].StringValue;
                            }
                        }

                        bool iswl = false;
                        int keyDic = 0;
                        foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kvs in dicEcList)
                        {
                            string wlbm1 = "";
                            if (kvs.Value[0][0].GetPropertyValue("CERI_MAT_GRADE") != null)
                            {
                                wlbm1 = kvs.Value[0][0]["CERI_MAT_GRADE"].StringValue;
                            }
                            else
                            {
                                if (kvs.Value[0][0].GetPropertyValue("GRADE") != null)
                                {
                                    wlbm1 = kvs.Value[0][0]["GRADE"].StringValue;
                                }
                            }
                            if (wlbm.Equals(wlbm1))
                            {
                                iswl = true;
                                keyDic = kvs.Key;
                                bool isDicz = false;
                                int keyz = 0;
                                foreach (KeyValuePair<int, List<IECInstance>> kvz in kvs.Value)
                                {
                                    bool isHz = hzPd(iec, kvz.Value[0]);
                                    if (isHz)
                                    {
                                        keyz = kvz.Key;
                                        isDicz = true;
                                    }
                                }
                                if (isDicz)
                                {
                                    dicEcList[keyDic][keyz].Add(iec);
                                }
                                else
                                {
                                    List<IECInstance> iecZList = new List<IECInstance>();
                                    iecZList.Add(iec);
                                    dicEcList[keyDic].Add(dicEcList[keyDic].Count, iecZList);
                                }
                            }
                        }

                        if (!iswl)
                        {
                            List<IECInstance> iList = new List<IECInstance>();
                            iList.Add(iec);
                            //dicEcList[keyNum].Add(0, iList);
                            Dictionary<int, List<IECInstance>> dicL = new Dictionary<int, List<IECInstance>>();
                            dicL.Add(0, iList);
                            dicEcList.Add(keyNum, dicL);
                            keyNum++;
                        }
                    }
                }
                #endregion
            }
            return dicEcList;
        }

        /// <summary>
        /// 点击全部时，获取dgn下的所有元素
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            if (radioButton1.Checked == true)
            {
                dataGridView1.Rows.Clear();
                dataGridView2.Rows.Clear();
                ECInstanceList ecList = DgnUtilities.GetAllInstancesFromDgn();
                itemList = fuzhi(ecList);
                if (itemList.Count > 0)
                {
                    foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                    {
                        dataGridView1.Rows.Add(true, kv.Value[0][0]["LINENUMBER"].StringValue, kv.Value[0][0]["SPECIFICATION"].StringValue);
                        foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                        {
                            dataGridView2.Rows.Add(true, kv1.Value[0].ClassDefinition.Name, kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue.ToString(), kv1.Value[0]["LINENUMBER"].StringValue);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// 点击选中时获取选中的元素
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void radioButton2_CheckedChanged(object sender, EventArgs e)
        {
            if (radioButton2.Checked == true)
            {
                ECInstanceList ecList = DgnUtilities.GetSelectedInstances();
                if (ecList.Count > 0)
                {
                    dataGridView1.Rows.Clear();
                    dataGridView2.Rows.Clear();
                    itemList = fuzhi(ecList);
                    if (itemList.Count > 0)
                    {
                        foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                        {
                            dataGridView1.Rows.Add(true, kv.Value[0][0]["LINENUMBER"].StringValue, kv.Value[0][0]["SPECIFICATION"].StringValue);
                            foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                            {
                                dataGridView2.Rows.Add(true, kv1.Value[0].ClassDefinition.Name, kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue.ToString(), kv1.Value[0]["LINENUMBER"].StringValue);
                            }
                        }
                    }
                }
                else
                {
                    MessageBox.Show("请先选择元素！");
                    radioButton1.Checked = true;
                }
            }
        }

        /// <summary>
        /// 导出材料报表
        /// </summary>
        /// <param name="itemList"></param>
        public void ExportExcel(Dictionary<int, Dictionary<int, List<IECInstance>>> itemList)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.InitialDirectory = path0; //设置初始目录
            sfd.Filter = "Excel Files(*.xlsx)|*.xlsx";
            sfd.RestoreDirectory = true;

            if (sfd.ShowDialog() == DialogResult.OK)
            {
                string excelPath = sfd.FileName.ToString();
                string excelName = excelPath.Substring(excelPath.LastIndexOf("\\") + 1);
                int i = excelName.LastIndexOf(".");
                string houzhui = excelName.Substring(i + 1);
                if (houzhui != "xlsx")
                {
                    MessageBox.Show("输入文件名格式不正确");
                    return;
                }
                if (File.Exists(excelPath)) //判断是否有同名的文件
                {
                    string excelname = excelName.Substring(0, excelName.LastIndexOf("."));
                    string datetime = DateTime.Now.ToString("yyyyMMddHHmmssffff");
                    //string.Format("{0:yyyyMMddHHmmssffff}",dt);
                    //string datetime = string.Format("{ 0:yyyyMMddHHmmssffff}", dt.ToString());
                    //excelname += "1.xlsx";
                    excelname = excelname + datetime + ".xlsx";
                    //string name = excelname.Substring(excelPath1.LastIndexOf("\\") + 1);
                    MessageBox.Show("该路径下存在同名的文件。修改后的文件名为：" + excelname);
                    string path = excelPath.Substring(0, excelPath.LastIndexOf("\\") + 1);
                    excelPath = path + excelname;
                }
                string yName = lxcomboBox1.Text + ".xlsx";
                try
                {
                    File.Copy(path0 + "\\JYXConfig\\管道材料表\\" + yName, excelPath);
                }
                catch
                {
                    MessageBox.Show("路径" + path0 + "\\JYXConfig\\管道材料表：下没有找到" + yName + "文件");
                    return;
                }
                app = new MOIE.Application();
                MOIE.Workbooks wkb = app.Workbooks;
                MOIE.Workbook wb = wkb.Open(excelPath);
                //app.Visible = true;
                //wb=wkb.Open(excelPath1);
                MOIE.Worksheet s;
                if (lxcomboBox1.SelectedIndex == 1)
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道材料表-海外"];
                }
                else if (lxcomboBox1.SelectedIndex == 2)
                {
                    s = (MOIE.Worksheet)wb.Worksheets["压力管道材料表-国内 "];
                }
                else
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道材料表-国内"];
                }
                if (itemList.Count > 0)
                {
                    int row = 6; //行号
                    int lineindex = 0; //序号
                    foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                    {
                        row++;
                        lineindex++;
                        s.Cells[row, 1] = lineindex;
                        bool biaoshi = true;//避免重复添加管线编号
                        //s.Cells[row, 2] = kv.Value.Values[0]["LINENUMBER"].StringValue;
                        foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                        {
                            if (biaoshi)
                            {
                                string pipeLine = kv1.Value[0]["LINENUMBER"].StringValue;
                                string pipeNumber = OPM_Public_Api.repicePipeLine(pipeLine);
                                s.Cells[row, 2] = pipeNumber;
                                biaoshi = false;
                            }
                            row++;
                            string ecname = "";
                            string dn = "";
                            string unit = "";
                            double qty = 0;
                            string materialNum = "";
                            string pipece_mare = "";
                            string material = "";
                            double dry_weight = 0;
                            string catalog_name = "";
                            string media = "";
                            double totalweight = 0;
                            string bz = "";
                            ecname = kv1.Value[0].ClassDefinition.Name;
                            if (kv1.Value[0].GetPropertyValue("CERI_SHORT_DESC") != null)
                            {
                                ecname = kv1.Value[0]["CERI_SHORT_DESC"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("SHORT_DESCRIPTION") != null)
                                {
                                    ecname = kv1.Value[0]["SHORT_DESCRIPTION"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                            {
                                dn = kv1.Value[0]["CERI_MAIN_SIZE"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("NOMINAL_DIAMETER") != null)
                                {
                                    dn = "DN" + kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI MAT_GRADE") != null)
                            {
                                materialNum = kv1.Value[0]["CERI MAT_GRADE"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("GRADE") != null)
                                {
                                    materialNum = kv1.Value[0]["GRADE"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_PIECE_MARK") != null)
                            {
                                pipece_mare = kv1.Value[0]["CERI_PIECE_MARK"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("PIECE_MARK") != null)
                                {
                                    pipece_mare = kv1.Value[0]["PIECE_MARK"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                            {
                                material = kv1.Value[0]["CERI_MATERIAL"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                                {
                                    material = kv1.Value[0]["MATERIAL"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_CATALOG") != null)
                            {
                                catalog_name = kv1.Value[0]["CERI_CATALOG"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("CATALOG_NAME") != null)
                                {
                                    catalog_name = kv1.Value[0]["CATALOG_NAME"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_Media_Name") != null)
                            {
                                media = kv1.Value[0]["CERI_Media_Name"].StringValue;
                            }
                            if (kv1.Value[0].GetPropertyValue("NOTES") != null)
                            {
                                bz = kv1.Value[0]["NOTES"].StringValue;
                            }
                            bool b = BMECApi.Instance.InstanceDefinedAsClass(kv1.Value[0], "PIPE", true);
                            if (b)
                            {
                                if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                {
                                    dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                    {
                                        dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                                    }
                                }
                                unit = "米";
                                double length = 0;
                                foreach (IECInstance iec2 in kv1.Value)
                                {
                                    length += iec2["LENGTH"].DoubleValue / 1000;
                                    //dry_weight = iec.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                }
                                qty = length;
                                totalweight = qty * dry_weight;
                            }
                            else
                            {
                                unit = "个";
                                if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                {
                                    dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                    {
                                        dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                                    }
                                }
                                qty = kv1.Value.Count;
                                totalweight = qty * dry_weight;
                            }
                            if (lxcomboBox1.Text.Equals("CQ-B3004-1909-12A压力管道材料表（国内）"))
                            {
                                s.Cells[row, 3] = materialNum;
                                s.Cells[row, 4] = ecname;
                                s.Cells[row, 5] = pipece_mare;
                                s.Cells[row, 6] = dn;
                                s.Cells[row, 7] = material;
                                s.Cells[row, 8] = unit;
                                s.Cells[row, 9] = qty;
                                s.Cells[row, 10] = dry_weight;
                                s.Cells[row, 11] = totalweight;
                                s.Cells[row, 12] = catalog_name;
                                s.Cells[row, 13] = media;
                                s.Cells[row, 14] = bz;
                            }
                            else
                            {
                                s.Cells[row, 3] = materialNum;
                                s.Cells[row, 5] = ecname;
                                s.Cells[row, 6] = pipece_mare;
                                s.Cells[row, 7] = dn;
                                s.Cells[row, 8] = material;
                                s.Cells[row, 9] = unit;
                                s.Cells[row, 10] = qty;
                                s.Cells[row, 11] = dry_weight;
                                s.Cells[row, 12] = totalweight;
                                s.Cells[row, 13] = catalog_name;
                                s.Cells[row, 14] = media;
                                s.Cells[row, 15] = bz;
                            }
                        }
                    }
                    wb.Save();
                    wb.Close();
                    wkb.Close();
                    app.Quit();
                    MOIE.Application app1 = new MOIE.Application();
                    MOIE.Workbooks wbs = app1.Workbooks;
                    MOIE.Workbook wb1 = app1.Workbooks.Open(excelPath);
                    app1.Visible = true;
                }
            }
        }

        public void grExportExcel(Dictionary<int, Dictionary<int, List<IECInstance>>> itemList)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.InitialDirectory = path0; //设置初始目录
            sfd.Filter = "Excel Files(*.xlsx)|*.xlsx";
            sfd.RestoreDirectory = true;

            if (sfd.ShowDialog() == DialogResult.OK)
            {
                string excelPath = sfd.FileName.ToString();
                string excelName = excelPath.Substring(excelPath.LastIndexOf("\\") + 1);
                int i = excelName.LastIndexOf(".");
                string houzhui = excelName.Substring(i + 1);
                if (houzhui != "xlsx")
                {
                    MessageBox.Show("输入文件名格式不正确");
                    return;
                }
                if (File.Exists(excelPath)) //判断是否有同名的文件
                {
                    string excelname = excelName.Substring(0, excelName.LastIndexOf("."));
                    string datetime = DateTime.Now.ToString("yyyyMMddHHmmssffff");
                    //string.Format("{0:yyyyMMddHHmmssffff}",dt);
                    //string datetime = string.Format("{ 0:yyyyMMddHHmmssffff}", dt.ToString());
                    //excelname += "1.xlsx";
                    excelname = excelname + datetime + ".xlsx";
                    //string name = excelname.Substring(excelPath1.LastIndexOf("\\") + 1);
                    MessageBox.Show("该路径下存在同名的文件。修改后的文件名为：" + excelname);
                    string path = excelPath.Substring(0, excelPath.LastIndexOf("\\") + 1);
                    excelPath = path + excelname;
                }
                string yName = lxcomboBox1.Text + ".xlsx";
                try
                {
                    File.Copy(path0 + "\\JYXConfig\\隔热材料表\\" + yName, excelPath);
                }
                catch
                {
                    MessageBox.Show("路径" + path0 + "\\JYXConfig\\隔热材料表：下没有找到" + yName + "文件");
                    return;
                }
                app = new MOIE.Application();
                MOIE.Workbooks wkb = app.Workbooks;
                MOIE.Workbook wb = wkb.Open(excelPath);
                //app.Visible = true;
                //wb=wkb.Open(excelPath1);
                MOIE.Worksheet s;
                if (lxcomboBox1.SelectedIndex == 1)
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道隔热材料表-海外"];
                }
                else if (lxcomboBox1.SelectedIndex == 2)
                {
                    s = (MOIE.Worksheet)wb.Worksheets["压力管道隔热材料表-国内"];
                }
                else
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道隔热材料表-国内"];
                }
                if (itemList.Count > 0)
                {
                    int row = 7; //行号
                    int lineindex = 0; //序号
                    foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                    {
                        row++;
                        lineindex++;
                        s.Cells[row, 1] = lineindex;
                        bool biaoshi = true;//避免重复添加管线编号
                        //s.Cells[row, 2] = kv.Value.Values[0]["LINENUMBER"].StringValue;
                        foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                        {
                            if (biaoshi)
                            {
                                string pipeLine = kv1.Value[0]["LINENUMBER"].StringValue;
                                string pipeNumber = OPM_Public_Api.repicePipeLine(pipeLine);
                                s.Cells[row, 2] = pipeNumber;
                                //s.Cells[row, 2] = kv1.Value[0]["LINENUMBER"].StringValue;
                                biaoshi = false;
                            }
                            row++;
                            string jzmc = "", wd = "", dh = "", cz = "", bz = "";
                            double pod = 0, hd = 0, dlcd = 0, mj = 0, tj = 0;
                            int cs = 0;
                            #region
                            //if (iec.GetPropertyValue("CERI_Media_Name") != null)
                            //{
                            //    jzmc = iec["CERI_Media_Name"].StringValue;
                            //}
                            //if (iec.GetPropertyValue("CERI_PIPE_OD_M") != null)
                            //{
                            //    pod = iec["CERI_PIPE_OD_M"].DoubleValue;
                            //}
                            //else
                            //{
                            //    if (iec.GetPropertyValue("OUTSIDE_DIAMETER") != null)
                            //    {
                            //        pod = iec["OUTSIDE_DIAMETER"].DoubleValue;
                            //    }
                            //}
                            //if (iec.GetPropertyValue("CERI_TEMP") != null)
                            //{
                            //    wd = iec["CERI_TEMP"].StringValue;
                            //}
                            //if (iec.GetPropertyValue("CERI_Insulation_code") != null)
                            //{
                            //    dh = iec["CERI_Insulation_code"].StringValue;
                            //}
                            //if (iec.GetPropertyValue("CERI_Insulation_Materia") != null)
                            //{
                            //    cz = iec["CERI_Insulation_Materia"].StringValue;
                            //}
                            //else
                            //{
                            //    if (iec.GetPropertyValue("MATERIAL") != null)
                            //    {
                            //        cz = iec["MATERIAL"].StringValue;
                            //    }
                            //}
                            //if (iec.GetPropertyValue("CERI_Layer") != null)
                            //{
                            //    cs = iec["CERI_Layer"].IntValue;
                            //}
                            //if (iec.GetPropertyValue("CERI_Insulation_Thickness") != null)
                            //{
                            //    hd = iec["CERI_Insulation_Thickness"].DoubleValue;
                            //}
                            //else
                            //{
                            //    if (iec.GetPropertyValue("INSULATION_THICKNESS") != null)
                            //    {
                            //        hd = iec["INSULATION_THICKNESS"].DoubleValue;
                            //    }
                            //}
                            #endregion
                            if (kv1.Value[0].GetPropertyValue("CERI_Media_Name") != null)
                            {
                                jzmc = kv1.Value[0]["CERI_Media_Name"].StringValue;
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_PIPE_OD_M") != null)
                            {
                                pod = kv1.Value[0]["CERI_PIPE_OD_M"].DoubleValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("OUTSIDE_DIAMETER") != null)
                                {
                                    pod = kv1.Value[0]["OUTSIDE_DIAMETER"].DoubleValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_TEMP") != null)
                            {
                                wd = kv1.Value[0]["CERI_TEMP"].StringValue;
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_Insulation_code") != null)
                            {
                                dh = kv1.Value[0]["CERI_Insulation_code"].StringValue;
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Materia") != null)
                            {
                                cz = kv1.Value[0]["CERI_Insulation_Materia"].StringValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                                {
                                    cz = kv1.Value[0]["MATERIAL"].StringValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_Layer") != null)
                            {
                                cs = kv1.Value[0]["CERI_Layer"].IntValue;
                            }
                            if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Thickness") != null)
                            {
                                hd = kv1.Value[0]["CERI_Insulation_Thickness"].DoubleValue;
                            }
                            else
                            {
                                if (kv1.Value[0].GetPropertyValue("INSULATION_THICKNESS") != null)
                                {
                                    hd = kv1.Value[0]["INSULATION_THICKNESS"].DoubleValue;
                                }
                            }
                            foreach (IECInstance iec1 in kv1.Value)
                            {
                                if (iec1.GetPropertyValue("CERI_LENGTH") != null)
                                {
                                    dlcd += iec1["CERI_LENGTH"].DoubleValue;
                                }
                                else
                                {
                                    if (iec1.GetPropertyValue("LENGTH") != null)
                                    {
                                        dlcd += iec1["LENGTH"].DoubleValue / 1000;
                                    }
                                }
                                if (iec1.GetPropertyValue("CERI_Area") != null)
                                {
                                    mj += iec1["CERI_Area"].DoubleValue;
                                }
                                if (iec1.GetPropertyValue("CERI_Volume") != null)
                                {
                                    tj += iec1["CERI_Volume"].DoubleValue;
                                }
                            }
                            if (kv1.Value[0].GetPropertyValue("NOTES") != null)
                            {
                                bz = kv1.Value[0]["NOTES"].StringValue;
                            }
                            #region
                            //string ecname = "";
                            //string dn = "";
                            //string unit = "";
                            //double qty = 0;
                            //string materialNum = "";
                            //string pipece_mare = "";
                            //string material = "";
                            //double dry_weight = 0;
                            //string catalog_name = "";
                            //string media = "";
                            //double totalweight = 0;
                            //ecname = kv1.Value[0].ClassDefinition.Name;
                            //if (kv1.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                            //{
                            //    dn = kv1.Value[0]["CERI_MAIN_SIZE"].StringValue;
                            //}
                            //else
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("NOMINAL_DIAMETER") != null)
                            //    {
                            //        dn = "DN" + kv1.Value[0]["NOMINAL_DIAMETER"].DoubleValue;
                            //    }
                            //}
                            //if (kv1.Value[0].GetPropertyValue("CERI MAT_GRADE") != null)
                            //{
                            //    materialNum = kv1.Value[0]["CERI MAT_GRADE"].StringValue;
                            //}
                            //else
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("GRADE") != null)
                            //    {
                            //        materialNum = kv1.Value[0]["GRADE"].StringValue;
                            //    }
                            //}
                            //if (kv1.Value[0].GetPropertyValue("CERI_PIECE_MARK") != null)
                            //{
                            //    pipece_mare = kv1.Value[0]["CERI_PIECE_MARK"].StringValue;
                            //}
                            //else
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("PIECE_MARK") != null)
                            //    {
                            //        pipece_mare = kv1.Value[0]["PIECE_MARK"].StringValue;
                            //    }
                            //}
                            //if (kv1.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                            //{
                            //    material = kv1.Value[0]["CERI_MATERIAL"].StringValue;
                            //}
                            //else
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                            //    {
                            //        material = kv1.Value[0]["MATERIAL"].StringValue;
                            //    }
                            //}
                            //if (kv1.Value[0].GetPropertyValue("CERI_CATALOG") != null)
                            //{
                            //    catalog_name = kv1.Value[0]["CERI_CATALOG"].StringValue;
                            //}
                            //else
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("CATALOG_NAME") != null)
                            //    {
                            //        catalog_name = kv1.Value[0]["CATALOG_NAME"].StringValue;
                            //    }
                            //}
                            //if (kv1.Value[0].GetPropertyValue("CERI_Media_Name") != null)
                            //{
                            //    media = kv1.Value[0]["CERI_Media_Name"].StringValue;
                            //}

                            //bool b = BMECApi.Instance.InstanceDefinedAsClass(kv1.Value[0], "PIPE", true);
                            //if (b)
                            //{
                            //    if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                            //    {
                            //        dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                            //    }
                            //    else
                            //    {
                            //        if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                            //        {
                            //            dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                            //        }
                            //    }
                            //    unit = "米";
                            //    double length = 0;
                            //    foreach (IECInstance iec2 in kv1.Value)
                            //    {
                            //        length += iec2["LENGTH"].DoubleValue / 1000;
                            //        //dry_weight = iec.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                            //    }
                            //    qty = length;
                            //    totalweight = qty * dry_weight;
                            //}
                            //else
                            //{
                            //    unit = "个";
                            //    if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                            //    {
                            //        dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                            //    }
                            //    else
                            //    {
                            //        if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                            //        {
                            //            dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                            //        }
                            //    }
                            //    qty = kv1.Value.Count;
                            //    totalweight = qty * dry_weight;
                            //}
                            #endregion
                            s.Cells[row, 3] = jzmc;
                            s.Cells[row, 4] = pod;
                            s.Cells[row, 5] = dlcd;
                            s.Cells[row, 6] = wd;
                            s.Cells[row, 7] = dh;
                            s.Cells[row, 10] = cs;
                            s.Cells[row, 11] = hd;
                            s.Cells[row, 12] = mj;
                            s.Cells[row, 13] = tj;
                            s.Cells[row, 14] = bz;
                            //s.Cells[row, 13] = catalog_name;
                            //s.Cells[row, 14] = media;
                        }
                    }
                    wb.Save();
                    wb.Close();
                    wkb.Close();
                    app.Quit();
                    MOIE.Application app1 = new MOIE.Application();
                    MOIE.Workbooks wbs = app1.Workbooks;
                    MOIE.Workbook wb1 = app1.Workbooks.Open(excelPath);
                    app1.Visible = true;
                }
            }
        }

        public void zjExportExcel(Dictionary<int, Dictionary<int, List<IECInstance>>> itemList)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.InitialDirectory = path0; //设置初始目录
            sfd.Filter = "Excel Files(*.xlsx)|*.xlsx";
            sfd.RestoreDirectory = true;

            if (sfd.ShowDialog() == DialogResult.OK)
            {
                string excelPath = sfd.FileName.ToString();
                string excelName = excelPath.Substring(excelPath.LastIndexOf("\\") + 1);
                int i = excelName.LastIndexOf(".");
                string houzhui = excelName.Substring(i + 1);
                if (houzhui != "xlsx")
                {
                    MessageBox.Show("输入文件名格式不正确");
                    return;
                }
                if (File.Exists(excelPath)) //判断是否有同名的文件
                {
                    string excelname = excelName.Substring(0, excelName.LastIndexOf("."));
                    string datetime = DateTime.Now.ToString("yyyyMMddHHmmssffff");
                    //string.Format("{0:yyyyMMddHHmmssffff}",dt);
                    //string datetime = string.Format("{ 0:yyyyMMddHHmmssffff}", dt.ToString());
                    //excelname += "1.xlsx";
                    excelname = excelname + datetime + ".xlsx";
                    //string name = excelname.Substring(excelPath1.LastIndexOf("\\") + 1);
                    MessageBox.Show("该路径下存在同名的文件。修改后的文件名为：" + excelname);
                    string path = excelPath.Substring(0, excelPath.LastIndexOf("\\") + 1);
                    excelPath = path + excelname;
                }
                string yName = lxcomboBox1.Text + ".xlsx";
                bool isHz = lxcomboBox1.Text.Equals("管道造价汇总表");
                try
                {
                    if (isHz)
                    {
                        File.Copy(path0 + "\\JYXConfig\\管道造价汇总表\\" + yName, excelPath);
                    }
                    else
                    {
                        File.Copy(path0 + "\\JYXConfig\\管道造价表\\" + yName, excelPath);
                    }

                }
                catch
                {
                    if (isHz)
                    {
                        MessageBox.Show("路径" + path0 + "\\JYXConfig\\管道造价汇总表：下没有找到" + yName + "文件");
                    }
                    else
                    {
                        MessageBox.Show("路径" + path0 + "\\JYXConfig\\管道造价表：下没有找到" + yName + "文件");
                    }
                    return;
                }
                app = new MOIE.Application();
                MOIE.Workbooks wkb = app.Workbooks;
                MOIE.Workbook wb = wkb.Open(excelPath);
                //app.Visible = true;
                //wb=wkb.Open(excelPath1);
                MOIE.Worksheet s;
                if (isHz)
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道汇总表"];
                }
                else
                {
                    s = (MOIE.Worksheet)wb.Worksheets["管道明细表"];
                }

                if (itemList.Count > 0)
                {
                    //给s填值就行
                    if (isHz)
                    {
                        int row = 3, lineindex = 0;
                        #region 按物料编码分组
                        if (wlbmGroupcheckBox1.Checked)
                        {
                            foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                            {
                                row++;
                                lineindex++;
                                s.Cells[row, 1] = lineindex;
                                bool biaoshi = true;
                                //int irow = 0;
                                foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                                {
                                    int irow = 0;
                                    double xNum = 0, xzz = 0, zgNum = 0, zgzz = 0;
                                    if (biaoshi)
                                    {
                                        string pipeLine = kv1.Value[0]["LINENUMBER"].StringValue;
                                        string pipeNumber = OPM_Public_Api.repicePipeLine(pipeLine);
                                        s.Cells[row, 2] = pipeNumber;
                                        //s.Cells[row, 2] = kv1.Value[0]["LINENUMBER"].StringValue;
                                        biaoshi = false;
                                    }
                                    irow = row + 1;
                                    for (int j = irow + 1; j < irow + kv1.Value.Count; j++)
                                    {
                                        MOIE.Range range = s.Range[s.Cells[irow, 10], s.Cells[j, 10]];
                                        range.Application.DisplayAlerts = false;
                                        range.Merge(Type.Missing);
                                        range.Application.DisplayAlerts = true;
                                        MOIE.Range range1 = s.Range[s.Cells[irow, 11], s.Cells[j, 11]];
                                        range1.Application.DisplayAlerts = false;
                                        range1.Merge(Type.Missing);
                                        range1.Application.DisplayAlerts = true;
                                        MOIE.Range range2 = s.Range[s.Cells[irow, 12], s.Cells[j, 12]];
                                        range2.Application.DisplayAlerts = false;
                                        range2.Merge(Type.Missing);
                                        range2.Application.DisplayAlerts = true;
                                        MOIE.Range range3 = s.Range[s.Cells[irow, 13], s.Cells[j, 13]];
                                        range3.Application.DisplayAlerts = false;
                                        range3.Merge(Type.Missing);
                                        range3.Application.DisplayAlerts = true;
                                    }
                                    foreach (IECInstance iec in kv1.Value)
                                    {
                                        row++;
                                        //irow = row;                                        
                                        string xN = "0";
                                        if (iec.GetPropertyValue("CERI_Centerline_Meter") != null)
                                        {
                                            xN = iec["CERI_Centerline_Meter"].StringValue;
                                            if (xN != "" && xN != null)
                                            {
                                                xN = xN.Substring(0, xN.IndexOf("m"));
                                                double xn = Convert.ToDouble(xN);
                                                xNum += xn;
                                            }

                                        }
                                        else
                                        {
                                            if (iec.GetPropertyValue("LENGTH") != null)
                                            {
                                                xNum += iec["LENGTH"].DoubleValue / 1000;
                                            }
                                        }

                                        string dw = "";
                                        double dz = 0;
                                        bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE", true);
                                        if (b)
                                        {
                                            double dry_weight = 0;
                                            if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                            {
                                                dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                                dz = dry_weight;
                                            }
                                            else
                                            {
                                                if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                                                {
                                                    dry_weight = iec["DRY_WEIGHT"].DoubleValue * 1000;
                                                    dz = dry_weight;
                                                }
                                            }
                                            dw = "米";
                                            //unit = "米";
                                            double length = 0;
                                            length += iec["LENGTH"].DoubleValue / 1000;
                                            //qty = length;
                                            double totalweight = length * dry_weight;
                                            zgNum += length;
                                            xzz += totalweight;
                                            zgzz += totalweight;
                                        }
                                        else
                                        {
                                            double dry_weight = 0;
                                            if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                            {
                                                dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue;
                                            }
                                            else
                                            {
                                                if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                                                {
                                                    dry_weight = iec["DRY_WEIGHT"].DoubleValue;
                                                }
                                            }
                                            dz = dry_weight;
                                            dw = "个";
                                            xzz += dry_weight;
                                        }
                                        string xtbh = "", xtmc = "", clmc = "", ggxh = "", gdcz = "", bz = "";
                                        if (iec.GetPropertyValue("CERI_System_Number") != null)
                                        {
                                            xtbh = iec["CERI_System_Number"].StringValue;
                                        }
                                        else
                                        {
                                            if (iec.GetPropertyValue("UNIT") != null)
                                            {
                                                xtbh = iec["UNIT"].StringValue;
                                            }
                                        }
                                        if (iec.GetPropertyValue("CERI_System_Name") != null)
                                        {
                                            xtmc = iec["CERI_System_Name"].StringValue;
                                        }
                                        if (iec.GetPropertyValue("CERI_SHORT_DESC") != null)
                                        {
                                            clmc = iec["CERI_SHORT_DESC"].StringValue;
                                        }
                                        else
                                        {
                                            if (iec.GetPropertyValue("SHORT_DESCRIPTION") != null)
                                            {
                                                clmc = iec["SHORT_DESCRIPTION"].StringValue;
                                            }
                                        }
                                        if (iec.GetPropertyValue("CERI_MAIN_SIZE") != null)
                                        {
                                            ggxh = iec["CERI_MAIN_SIZE"].StringValue;
                                        }
                                        if (iec.GetPropertyValue("CERI_MATERIAL") != null)
                                        {
                                            gdcz = iec["CERI_MATERIAL"].StringValue;
                                        }
                                        else
                                        {
                                            if (iec.GetPropertyValue("MATERIAL") != null)
                                            {
                                                gdcz = iec["MATERIAL"].StringValue;
                                            }
                                        }
                                        if (iec.GetPropertyValue("NOTES") != null)
                                        {
                                            bz = iec["NOTES"].StringValue;
                                        }
                                        s.Cells[row, 3] = xtbh;
                                        s.Cells[row, 4] = xtmc;
                                        s.Cells[row, 5] = clmc;
                                        s.Cells[row, 6] = ggxh;
                                        s.Cells[row, 7] = gdcz;
                                        s.Cells[row, 8] = dz;
                                        s.Cells[row, 9] = dw;
                                        s.Cells[row, 14] = bz;
                                    }
                                    string wlbm = "";
                                    if (kv1.Value[0].GetPropertyValue("CERI_MAT_GRADE") != null)
                                    {
                                        wlbm = kv1.Value[0]["CERI_MAT_GRADE"].StringValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("GRADE") != null)
                                        {
                                            wlbm = kv1.Value[0]["GRADE"].StringValue;
                                        }
                                    }
                                    s.Cells[irow, 10] = xNum;
                                    MOIE.Range r = s.Cells[irow, 10];
                                    r.NumberFormatLocal = "@";
                                    s.Cells[irow, 11] = xzz;
                                    MOIE.Range r1 = s.Cells[irow, 11];
                                    r1.NumberFormatLocal = "@";
                                    s.Cells[irow, 12] = zgNum;
                                    MOIE.Range r2 = s.Cells[irow, 12];
                                    r2.NumberFormatLocal = "@";
                                    s.Cells[irow, 13] = zgzz;
                                    MOIE.Range r3 = s.Cells[irow, 13];
                                    r3.NumberFormatLocal = "@";
                                    s.Cells[irow, 15] = wlbm;
                                }
                            }
                        }
                        #endregion
                        else
                        {
                            foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                            {
                                row++;
                                lineindex++;
                                s.Cells[row, 1] = lineindex;
                                bool biaoshi = true;
                                int irow = 0;
                                double xNum = 0, xzz = 0, zgNum = 0, zgzz = 0;
                                #region
                                foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                                {
                                    if (biaoshi)
                                    {
                                        string pipeLine = kv1.Value[0]["LINENUMBER"].StringValue;
                                        string pipeNumber = OPM_Public_Api.repicePipeLine(pipeLine);
                                        s.Cells[row, 2] = pipeNumber;
                                        //s.Cells[row, 2] = kv1.Value[0]["LINENUMBER"].StringValue;
                                        biaoshi = false;
                                        irow = row + 1;
                                        for (int j = irow + 1; j < irow + kv.Value.Count; j++)
                                        {
                                            MOIE.Range range = s.Range[s.Cells[irow, 10], s.Cells[j, 10]];
                                            range.Application.DisplayAlerts = false;
                                            range.Merge(Type.Missing);
                                            range.Application.DisplayAlerts = true;
                                            MOIE.Range range1 = s.Range[s.Cells[irow, 11], s.Cells[j, 11]];
                                            range1.Application.DisplayAlerts = false;
                                            range1.Merge(Type.Missing);
                                            range1.Application.DisplayAlerts = true;
                                            MOIE.Range range2 = s.Range[s.Cells[irow, 12], s.Cells[j, 12]];
                                            range2.Application.DisplayAlerts = false;
                                            range2.Merge(Type.Missing);
                                            range2.Application.DisplayAlerts = true;
                                            MOIE.Range range3 = s.Range[s.Cells[irow, 13], s.Cells[j, 13]];
                                            range3.Application.DisplayAlerts = false;
                                            range3.Merge(Type.Missing);
                                            range3.Application.DisplayAlerts = true;
                                        }
                                    }
                                    row++;
                                    string xN = "0";
                                    if (kv1.Value[0].GetPropertyValue("CERI_Centerline_Meter") != null)
                                    {
                                        xN = kv1.Value[0]["CERI_Centerline_Meter"].StringValue;
                                        if (xN != "" && xN != null)
                                        {
                                            xN = xN.Substring(0, xN.IndexOf("m"));
                                            double xn = Convert.ToDouble(xN);
                                            xNum += xn;
                                        }

                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("LENGTH") != null)
                                        {
                                            xNum += kv1.Value[0]["LENGTH"].DoubleValue / 1000;
                                        }
                                    }

                                    string dw = "";
                                    double dz = 0;
                                    bool b = BMECApi.Instance.InstanceDefinedAsClass(kv1.Value[0], "PIPE", true);
                                    if (b)
                                    {
                                        double dry_weight = 0;
                                        if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                        {
                                            dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                            dz = dry_weight;
                                        }
                                        else
                                        {
                                            if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                            {
                                                dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                                dz = dry_weight;
                                            }
                                        }
                                        dw = "米";
                                        //unit = "米";
                                        double length = 0;
                                        foreach (IECInstance iec2 in kv1.Value)
                                        {
                                            length += iec2["LENGTH"].DoubleValue / 1000;
                                            //dry_weight = iec.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                        }
                                        //qty = length;
                                        double totalweight = length * dry_weight;
                                        zgNum += length;
                                        xzz += totalweight;
                                        zgzz += totalweight;
                                    }
                                    else
                                    {
                                        double dry_weight = 0;
                                        if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                        {
                                            dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                                        }
                                        else
                                        {
                                            if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                            {
                                                dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                                            }
                                        }
                                        dz = dry_weight;
                                        dw = "个";
                                        xzz += dry_weight;
                                    }
                                    string xtbh = "", xtmc = "", clmc = "", ggxh = "", gdcz = "", bz = "", wlbm = "";
                                    if (kv1.Value[0].GetPropertyValue("CERI_System_Number") != null)
                                    {
                                        xtbh = kv1.Value[0]["CERI_System_Number"].StringValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("UNIT") != null)
                                        {
                                            xtbh = kv1.Value[0]["UNIT"].StringValue;
                                        }
                                    }
                                    if (kv1.Value[0].GetPropertyValue("CERI_System_Name") != null)
                                    {
                                        xtmc = kv1.Value[0]["CERI_System_Name"].StringValue;
                                    }
                                    if (kv1.Value[0].GetPropertyValue("CERI_SHORT_DESC") != null)
                                    {
                                        clmc = kv1.Value[0]["CERI_SHORT_DESC"].StringValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("SHORT_DESCRIPTION") != null)
                                        {
                                            clmc = kv1.Value[0]["SHORT_DESCRIPTION"].StringValue;
                                        }
                                    }
                                    if (kv1.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                                    {
                                        ggxh = kv1.Value[0]["CERI_MAIN_SIZE"].StringValue;
                                    }
                                    if (kv1.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                                    {
                                        gdcz = kv1.Value[0]["CERI_MATERIAL"].StringValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                                        {
                                            gdcz = kv1.Value[0]["MATERIAL"].StringValue;
                                        }
                                    }
                                    if (kv1.Value[0].GetPropertyValue("NOTES") != null)
                                    {
                                        bz = kv1.Value[0]["NOTES"].StringValue;
                                    }
                                    if (kv1.Value[0].GetPropertyValue("CERI_MAT_GRADE") != null)
                                    {
                                        wlbm = kv1.Value[0]["CERI_MAT_GRADE"].StringValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("GRADE") != null)
                                        {
                                            wlbm = kv1.Value[0]["GRADE"].StringValue;
                                        }
                                    }
                                    s.Cells[row, 3] = xtbh;
                                    s.Cells[row, 4] = xtmc;
                                    s.Cells[row, 5] = clmc;
                                    s.Cells[row, 6] = ggxh;
                                    s.Cells[row, 7] = gdcz;
                                    s.Cells[row, 8] = dz;
                                    s.Cells[row, 9] = dw;
                                    s.Cells[row, 14] = bz;
                                    s.Cells[row, 15] = wlbm;
                                }
                                s.Cells[irow, 10] = xNum;
                                MOIE.Range r = s.Cells[irow, 10];
                                r.NumberFormatLocal = "@";
                                s.Cells[irow, 11] = xzz;
                                MOIE.Range r1 = s.Cells[irow, 11];
                                r1.NumberFormatLocal = "@";
                                s.Cells[irow, 12] = zgNum;
                                MOIE.Range r2 = s.Cells[irow, 12];
                                r2.NumberFormatLocal = "@";
                                s.Cells[irow, 13] = zgzz;
                                MOIE.Range r3 = s.Cells[irow, 13];
                                r3.NumberFormatLocal = "@";
                                #endregion
                            }
                        }
                    }
                    else
                    {
                        int row = 3, lineindex = 0;
                        foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                        {
                            row++;
                            lineindex++;
                            s.Cells[row, 1] = lineindex;
                            bool biaoshi = true;
                            int irow = 0;
                            double min = double.MaxValue, max = double.MinValue, xNum = 0, xzz = 0, zgNum = 0, zgzz = 0;
                            #region
                            foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                            {
                                if (biaoshi)
                                {
                                    //s.get_Range(s.Cells[5, 5], s.Cells[5, 6]).Merge(Type.Missing);
                                    string pipeLine = kv1.Value[0]["LINENUMBER"].StringValue;
                                    string pipeNumber = OPM_Public_Api.repicePipeLine(pipeLine);
                                    s.Cells[row, 2] = pipeNumber;
                                    //s.Cells[row, 2] = kv1.Value[0]["LINENUMBER"].StringValue;
                                    biaoshi = false;
                                    irow = row + 1;
                                    for (int j = irow + 1; j < irow + kv.Value.Count; j++)
                                    {
                                        try
                                        {

                                            MOIE.Range range = s.Range[s.Cells[irow, 15], s.Cells[j, 15]];
                                            range.Application.DisplayAlerts = false;
                                            range.Merge(Type.Missing);
                                            range.Application.DisplayAlerts = true;
                                        }
                                        catch (Exception ex)
                                        {
                                            string e = ex.ToString();
                                        }
                                        MOIE.Range range1 = s.Range[s.Cells[irow, 16], s.Cells[j, 16]];
                                        range1.Application.DisplayAlerts = false;
                                        range1.Merge(Type.Missing);
                                        range1.Application.DisplayAlerts = true;
                                        MOIE.Range range2 = s.Range[s.Cells[irow, 19], s.Cells[j, 19]];
                                        range2.Application.DisplayAlerts = false;
                                        range2.Merge(Type.Missing);
                                        range2.Application.DisplayAlerts = true;
                                        MOIE.Range range3 = s.Range[s.Cells[irow, 20], s.Cells[j, 20]];
                                        range3.Application.DisplayAlerts = false;
                                        range3.Merge(Type.Missing);
                                        range3.Application.DisplayAlerts = true;
                                        MOIE.Range range4 = s.Range[s.Cells[irow, 21], s.Cells[j, 21]];
                                        range4.Application.DisplayAlerts = false;
                                        range4.Merge(Type.Missing);
                                        range4.Application.DisplayAlerts = true;
                                        MOIE.Range range5 = s.Range[s.Cells[irow, 22], s.Cells[j, 22]];
                                        range5.Application.DisplayAlerts = false;
                                        range5.Merge(Type.Missing);
                                        range5.Application.DisplayAlerts = true;
                                    }

                                }
                                row++;
                                string pMin = "0", pMax = "0";
                                if (kv1.Value[0].GetPropertyValue("CERI_Lowest_Center_Elevation_Pipe") != null)
                                {
                                    pMin = kv1.Value[0]["CERI_Lowest_Center_Elevation_Pipe"].StringValue;
                                    if (pMin != null && pMin != "")
                                    {
                                        pMin = pMin.Substring(0, pMin.IndexOf("m"));
                                        double pmin = Convert.ToDouble(pMin);
                                        if (pmin <= min)
                                        {
                                            min = pmin;
                                        }
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Topest_Center_Elevation_Pipe") != null)
                                {
                                    pMax = kv1.Value[0]["CERI_Topest_Center_Elevation_Pipe"].StringValue;
                                    if (pMax != "" && pMax != null)
                                    {
                                        pMax = pMax.Substring(0, pMax.IndexOf("m"));
                                        double pmax = Convert.ToDouble(pMax);
                                        if (pmax >= max)
                                        {
                                            max = pmax;
                                        }
                                    }

                                }
                                string xN = "0";
                                if (kv1.Value[0].GetPropertyValue("CERI_Centerline_Meter") != null)
                                {
                                    xN = kv1.Value[0]["CERI_Centerline_Meter"].StringValue;
                                    if (xN != "" && xN != null)
                                    {
                                        xN = xN.Substring(0, xN.IndexOf("m"));
                                        double xn = Convert.ToDouble(xN);
                                        xNum += xn;
                                    }

                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("LENGTH") != null)
                                    {
                                        xNum += kv1.Value[0]["LENGTH"].DoubleValue / 1000;
                                    }
                                }

                                string dw = "";
                                double dz = 0;
                                bool b = BMECApi.Instance.InstanceDefinedAsClass(kv1.Value[0], "PIPE", true);
                                if (b)
                                {
                                    double dry_weight = 0;
                                    if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                        dz = dry_weight;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                            dz = dry_weight;
                                        }
                                    }
                                    dw = "米";
                                    //unit = "米";
                                    double length = 0;
                                    foreach (IECInstance iec2 in kv1.Value)
                                    {
                                        length += iec2["LENGTH"].DoubleValue / 1000;
                                        //dry_weight = iec.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                    }
                                    //qty = length;
                                    double totalweight = length * dry_weight;
                                    zgNum += length;
                                    xzz += totalweight;
                                    zgzz += totalweight;
                                }
                                else
                                {
                                    double dry_weight = 0;
                                    if (kv1.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kv1.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                                    }
                                    else
                                    {
                                        if (kv1.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kv1.Value[0]["DRY_WEIGHT"].DoubleValue;
                                        }
                                    }
                                    dz = dry_weight;
                                    dw = "个";
                                    xzz += dry_weight;
                                }

                                string wlbm = "", xtbh = "", xtmc = "", clmc = "", bzh = "", xtljfs = "", sjljfs = "", yldj = "", ggxh = "", gdcz = "", azbw = "", sfmd = "", gnbff = "", gnbffjtyq = "", cxdj = "", dqyqzl = "", zjqyqzl = "", mqyqzl = "", bwcl = "", fhcl = "", gg = "", tsbl = "", tsfs = "", ylsy = "", scx = "", kqcs = "", zqcs = "", jx = "", sx = "", gdtz = "", yqx = "";
                                double bwhd = 0;
                                int dqbs = 0, zjqbs = 0, mqbs = 0;
                                if (kv1.Value[0].GetPropertyValue("CERI_MAT_GRADE") != null)
                                {
                                    wlbm = kv1.Value[0]["CERI_MAT_GRADE"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("GRADE") != null)
                                    {
                                        wlbm = kv1.Value[0]["GRADE"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_System_Number") != null)
                                {
                                    xtbh = kv1.Value[0]["CERI_System_Number"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("UNIT") != null)
                                    {
                                        xtbh = kv1.Value[0]["UNIT"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_System_Name") != null)
                                {
                                    xtmc = kv1.Value[0]["CERI_System_Name"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_SHORT_DESC") != null)
                                {
                                    clmc = kv1.Value[0]["CERI_SHORT_DESC"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("SHORT_DESCRIPTION") != null)
                                    {
                                        clmc = kv1.Value[0]["SHORT_DESCRIPTION"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_CATALOG") != null)
                                {
                                    bzh = kv1.Value[0]["CERI_CATALOG"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("CATALOG_NAME") != null)
                                    {
                                        bzh = kv1.Value[0]["CATALOG_NAME"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_END_COND_1") != null)
                                {
                                    string ljxszh = kv1.Value[0]["CERI_END_COND_1"].StringValue;
                                    xtljfs = ljxszh;
                                    string ljxs2 = kv1.Value[0]["CERI_END_COND_2"].StringValue;
                                    if (ljxs2 != "" && ljxs2 != null)
                                    {
                                        xtljfs += "," + ljxs2;
                                    }
                                    string ljxs3 = kv1.Value[0]["CERI_END_COND_3"].StringValue;
                                    if (ljxs3 != "" || ljxs3 != null)
                                    {
                                        xtljfs += "," + ljxs3;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Connection_Type") != null)
                                {
                                    sjljfs = kv1.Value[0]["CERI_Connection_Type"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Pressure_Rating") != null)
                                {
                                    yldj = kv1.Value[0]["CERI_Pressure_Rating"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                                {
                                    ggxh = kv1.Value[0]["CERI_MAIN_SIZE"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                                {
                                    gdcz = kv1.Value[0]["CERI_MATERIAL"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                                    {
                                        gdcz = kv1.Value[0]["MATERIAL"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Installation_Site") != null)
                                {
                                    azbw = kv1.Value[0]["CERI_Installation_Site"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Buried") != null)
                                {
                                    sfmd = kv1.Value[0]["CERI_Buried"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Pipe_Lining_Anticorrosion") != null)
                                {
                                    gnbff = kv1.Value[0]["CERI_Pipe_Lining_Anticorrosion"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Specification") != null)
                                {
                                    gnbffjtyq = kv1.Value[0]["CERI_Specification"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Derusting_Grade") != null)
                                {
                                    cxdj = kv1.Value[0]["CERI_Derusting_Grade"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Primer_Paint") != null)
                                {
                                    dqyqzl = kv1.Value[0]["CERI_Primer_Paint"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Primer_Pass") != null)
                                {
                                    dqbs = kv1.Value[0]["CERI_Primer_Pass"].IntValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Intermediate_Paint") != null)
                                {
                                    zjqyqzl = kv1.Value[0]["CERI_Intermediate_Paint"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Middle_Number") != null)
                                {
                                    zjqbs = kv1.Value[0]["CERI_Middle_Number"].IntValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Topcoat_Paint") != null)
                                {
                                    mqyqzl = kv1.Value[0]["CERI_Topcoat_Paint"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Finish_Times") != null)
                                {
                                    mqbs = kv1.Value[0]["CERI_Finish_Times"].IntValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Material") != null)
                                {
                                    bwcl = kv1.Value[0]["CERI_Insulation_Material"].StringValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("INSULATION") != null)
                                    {
                                        bwcl = kv1.Value[0]["INSULATION"].StringValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Thickness") != null)
                                {
                                    bwhd = kv1.Value[0]["CERI_Insulation_Thickness"].DoubleValue;
                                }
                                else
                                {
                                    if (kv1.Value[0].GetPropertyValue("INSULATION_THICKNESS") != null)
                                    {
                                        bwhd = kv1.Value[0]["INSULATION_THICKNESS"].DoubleValue;
                                    }
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Media_Name") != null)
                                {
                                    fhcl = kv1.Value[0]["CERI_Media_Name"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                                {
                                    gg = kv1.Value[0]["CERI_MAIN_SIZE"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Percentage_Detection") != null)
                                {
                                    tsbl = kv1.Value[0]["CERI_Percentage_Detection"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Inspection_Way") != null)
                                {
                                    tsfs = kv1.Value[0]["CERI_Inspection_Way"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Pressure_Testing") != null)
                                {
                                    ylsy = kv1.Value[0]["CERI_Pressure_Testing"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Water_Washing") != null)
                                {
                                    scx = kv1.Value[0]["CERI_Water_Washing"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Air_Purge") != null)
                                {
                                    kqcs = kv1.Value[0]["CERI_Air_Purge"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Steam_Blowing") != null)
                                {
                                    zqcs = kv1.Value[0]["CERI_Steam_Blowing"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Alkali_Wash") != null)
                                {
                                    jx = kv1.Value[0]["CERI_Alkali_Wash"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Acid_Pickling") != null)
                                {
                                    sx = kv1.Value[0]["CERI_Acid_Pickling"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Pipeline_Skim") != null)
                                {
                                    gdtz = kv1.Value[0]["CERI_Pipeline_Skim"].StringValue;
                                }
                                if (kv1.Value[0].GetPropertyValue("CERI_Oil_Cleaning") != null)
                                {
                                    yqx = kv1.Value[0]["CERI_Oil_Cleaning"].StringValue;
                                }

                                s.Cells[row, 3] = wlbm;
                                s.Cells[row, 4] = xtbh;
                                s.Cells[row, 5] = xtmc;
                                s.Cells[row, 6] = clmc;
                                s.Cells[row, 7] = bzh;
                                s.Cells[row, 8] = xtljfs;
                                s.Cells[row, 9] = sjljfs;
                                s.Cells[row, 10] = yldj;
                                s.Cells[row, 11] = ggxh;
                                s.Cells[row, 12] = gdcz;
                                s.Cells[row, 13] = azbw;
                                s.Cells[row, 14] = sfmd;
                                s.Cells[row, 17] = dz;
                                s.Cells[row, 18] = dw;
                                s.Cells[row, 23] = gnbff;
                                s.Cells[row, 24] = gnbffjtyq;
                                s.Cells[row, 25] = cxdj;
                                s.Cells[row, 26] = dqyqzl;
                                s.Cells[row, 27] = dqbs;
                                s.Cells[row, 28] = zjqyqzl;
                                s.Cells[row, 29] = zjqbs;
                                s.Cells[row, 30] = mqyqzl;
                                s.Cells[row, 31] = mqbs;
                                s.Cells[row, 32] = bwcl;
                                s.Cells[row, 33] = bwhd;
                                s.Cells[row, 34] = fhcl;
                                s.Cells[row, 35] = gg;
                                s.Cells[row, 36] = tsbl;
                                s.Cells[row, 37] = tsfs;
                                s.Cells[row, 38] = ylsy;
                                s.Cells[row, 39] = scx;
                                s.Cells[row, 40] = kqcs;
                                s.Cells[row, 41] = zqcs;
                                s.Cells[row, 42] = jx;
                                s.Cells[row, 43] = sx;
                                s.Cells[row, 44] = gdtz;
                                s.Cells[row, 45] = yqx;
                            }
                            #endregion
                            if (min == double.MaxValue)
                            {
                                s.Cells[irow, 15] = "";
                            }
                            else
                            {
                                s.Cells[irow, 15] = min;
                            }
                            if (max == double.MinValue)
                            {
                                s.Cells[irow, 16] = "";
                            }
                            else
                            {
                                s.Cells[irow, 16] = max;
                            }
                            s.Cells[irow, 19] = xNum;
                            MOIE.Range r = s.Cells[irow, 19];
                            r.NumberFormatLocal = "@";
                            s.Cells[irow, 20] = xzz;
                            MOIE.Range r1 = s.Cells[irow, 20];
                            r1.NumberFormatLocal = "@";
                            s.Cells[irow, 21] = zgNum;
                            MOIE.Range r2 = s.Cells[irow, 21];
                            r2.NumberFormatLocal = "@";
                            s.Cells[irow, 22] = zgzz;
                            MOIE.Range r3 = s.Cells[irow, 22];
                            r3.NumberFormatLocal = "@";
                        }
                    }
                    wb.Save();
                    wb.Close();
                    wkb.Close();
                    app.Quit();
                    MOIE.Application app1 = new MOIE.Application();
                    MOIE.Workbooks wbs = app1.Workbooks;
                    MOIE.Workbook wb1 = app1.Workbooks.Open(excelPath);
                    app1.Visible = true;
                    #region
                    //int row = 7; //行号
                    //int lineindex = 0; //序号
                    //foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                    //{
                    //    row++;
                    //    lineindex++;
                    //    s.Cells[row, 1] = lineindex;
                    //    bool biaoshi = true;//避免重复添加管线编号
                    //    //s.Cells[row, 2] = kv.Value.Values[0]["LINENUMBER"].StringValue;
                    //    foreach (KeyValuePair<int, List<IECInstance>> kv1 in kv.Value)
                    //    {
                    //        if (biaoshi)
                    //        {
                    //            s.Cells[row, 2] = kv1.Value[0]["LINENUMBER"].StringValue;
                    //            biaoshi = false;
                    //        }
                    //        row++;
                    //        string jzmc = "", wd = "", dh = "", cz = "";
                    //        double pod = 0, hd = 0, dlcd = 0, mj = 0, tj = 0;
                    //        int cs = 0;
                    //        if (kv1.Value[0].GetPropertyValue("CERI_Media_Name") != null)
                    //        {
                    //            jzmc = kv1.Value[0]["CERI_Media_Name"].StringValue;
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_PIPE_OD_M") != null)
                    //        {
                    //            pod = kv1.Value[0]["CERI_PIPE_OD_M"].DoubleValue;
                    //        }
                    //        else
                    //        {
                    //            if (kv1.Value[0].GetPropertyValue("OUTSIDE_DIAMETER") != null)
                    //            {
                    //                pod = kv1.Value[0]["OUTSIDE_DIAMETER"].DoubleValue;
                    //            }
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_TEMP") != null)
                    //        {
                    //            wd = kv1.Value[0]["CERI_TEMP"].StringValue;
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_Insulation_code") != null)
                    //        {
                    //            dh = kv1.Value[0]["CERI_Insulation_code"].StringValue;
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Materia") != null)
                    //        {
                    //            cz = kv1.Value[0]["CERI_Insulation_Materia"].StringValue;
                    //        }
                    //        else
                    //        {
                    //            if (kv1.Value[0].GetPropertyValue("MATERIAL") != null)
                    //            {
                    //                cz = kv1.Value[0]["MATERIAL"].StringValue;
                    //            }
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_Layer") != null)
                    //        {
                    //            cs = kv1.Value[0]["CERI_Layer"].IntValue;
                    //        }
                    //        if (kv1.Value[0].GetPropertyValue("CERI_Insulation_Thickness") != null)
                    //        {
                    //            hd = kv1.Value[0]["CERI_Insulation_Thickness"].DoubleValue;
                    //        }
                    //        else
                    //        {
                    //            if (kv1.Value[0].GetPropertyValue("INSULATION_THICKNESS") != null)
                    //            {
                    //                hd = kv1.Value[0]["INSULATION_THICKNESS"].DoubleValue;
                    //            }
                    //        }
                    //        foreach (IECInstance iec1 in kv1.Value)
                    //        {
                    //            if (iec1.GetPropertyValue("CERI_LENGTH") != null)
                    //            {
                    //                dlcd += iec1["CERI_LENGTH"].DoubleValue;
                    //            }
                    //            else
                    //            {
                    //                if (iec1.GetPropertyValue("LENGTH") != null)
                    //                {
                    //                    dlcd += iec1["LENGTH"] / 1000;
                    //                }
                    //            }
                    //            if (iec1.GetPropertyValue("CERI_Area") != null)
                    //            {
                    //                mj += iec1["CERI_Area"].DoubleValue;
                    //            }
                    //            if (iec1.GetPropertyValue("CERI_Volume") != null)
                    //            {
                    //                tj += iec1["CERI_Volume"].DoubleValue;
                    //            }
                    //        }
                    //        s.Cells[row, 3] = jzmc;
                    //        s.Cells[row, 4] = pod;
                    //        s.Cells[row, 5] = dlcd;
                    //        s.Cells[row, 6] = wd;
                    //        s.Cells[row, 7] = dh;
                    //        s.Cells[row, 10] = cs;
                    //        s.Cells[row, 11] = hd;
                    //        s.Cells[row, 12] = mj;
                    //        s.Cells[row, 13] = tj;
                    //        //s.Cells[row, 13] = catalog_name;
                    //        //s.Cells[row, 14] = media;
                    //    }
                    //}
                    //wb.Save();
                    //wb.Close();
                    //wkb.Close();
                    //app.Quit();
                    //MOIE.Application app1 = new MOIE.Application();
                    //MOIE.Workbooks wbs = app1.Workbooks;
                    //MOIE.Workbook wb1 = app1.Workbooks.Open(excelPath);
                    //app1.Visible = true;
                    #endregion
                }
            }
        }

        public void hzExportExcel(Dictionary<int, Dictionary<int, List<IECInstance>>> itemList)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.InitialDirectory = path0; //设置初始目录
            sfd.Filter = "Excel Files(*.xlsx)|*.xlsx";
            sfd.RestoreDirectory = true;

            if (sfd.ShowDialog() == DialogResult.OK)
            {
                string excelPath = sfd.FileName.ToString();
                string excelName = excelPath.Substring(excelPath.LastIndexOf("\\") + 1);
                int i = excelName.LastIndexOf(".");
                string houzhui = excelName.Substring(i + 1);
                if (houzhui != "xlsx")
                {
                    MessageBox.Show("输入文件名格式不正确");
                    return;
                }
                if (File.Exists(excelPath)) //判断是否有同名的文件
                {
                    string excelname = excelName.Substring(0, excelName.LastIndexOf("."));
                    string datetime = DateTime.Now.ToString("yyyyMMddHHmmssffff");
                    //string.Format("{0:yyyyMMddHHmmssffff}",dt);
                    //string datetime = string.Format("{ 0:yyyyMMddHHmmssffff}", dt.ToString());
                    //excelname += "1.xlsx";
                    excelname = excelname + datetime + ".xlsx";
                    //string name = excelname.Substring(excelPath1.LastIndexOf("\\") + 1);
                    MessageBox.Show("该路径下存在同名的文件。修改后的文件名为：" + excelname);
                    string path = excelPath.Substring(0, excelPath.LastIndexOf("\\") + 1);
                    excelPath = path + excelname;
                }
                string yName = lxcomboBox1.Text + ".xlsx";
                try
                {
                    File.Copy(path0 + "\\JYXConfig\\汇总材料表\\" + yName, excelPath);
                }
                catch
                {
                    MessageBox.Show("路径" + path0 + "\\JYXConfig\\汇总材料表：下没有找到" + yName + "文件");
                    return;
                }
                app = new MOIE.Application();
                MOIE.Workbooks wkb = app.Workbooks;
                MOIE.Workbook wb = wkb.Open(excelPath);
                //app.Visible = true;
                //wb=wkb.Open(excelPath1);
                MOIE.Worksheet s;
                s = (MOIE.Worksheet)wb.Worksheets["压力管道材料汇总表-国内"];
                if (itemList.Count > 0)
                {
                    if (wlbmGroupcheckBox1.Checked)
                    {
                        //bool isWl = true;
                        int index = 0, row = 6;
                        foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                        {
                            index++;
                            row++;
                            s.Cells[row, 1] = index;
                            string wlbm = "";
                            if (kv.Value[0][0].GetPropertyValue("CERI_MAT_GRADE") != null)
                            {
                                wlbm = kv.Value[0][0]["CERI_MAT_GRADE"].StringValue;
                            }
                            else
                            {
                                if (kv.Value[0][0].GetPropertyValue("GRADE") != null)
                                {
                                    wlbm = kv.Value[0][0]["GRADE"].StringValue;
                                }
                            }
                            s.Cells[row, 2] = wlbm;
                            int irow = 0;
                            bool isK = true;//为false合并总重单元格
                            if (wlbm != "" && wlbm != " ")
                            {
                                isK = false;
                            }
                            if (!isK)
                            {
                                irow = row + 1;
                                MOIE.Range r = s.Range[s.Cells[irow, 11], s.Cells[row + kv.Value.Count, 11]];
                                r.Application.DisplayAlerts = false;
                                r.Merge(Type.Missing);
                                r.Application.DisplayAlerts = true;
                            }
                            double zzW = 0;
                            foreach (KeyValuePair<int, List<IECInstance>> kvs in kv.Value)
                            {
                                row++;
                                string clmc = "", xh = "", gg = "", cz = "", dw = "", bzh = "", bz = "";
                                double dz = 0;
                                double nums = 0, zz = 0;
                                if (kvs.Value[0].GetPropertyValue("CERI_SHORT_DESC") != null)
                                {
                                    clmc = kvs.Value[0]["CERI_SHORT_DESC"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("SHORT_DESCRIPTION") != null)
                                    {
                                        clmc = kvs.Value[0]["SHORT_DESCRIPTION"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_PIECE_MARK") != null)
                                {
                                    xh = kvs.Value[0]["CERI_PIECE_MARK"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("PIECE_MARK") != null)
                                    {
                                        xh = kvs.Value[0]["PIECE_MARK"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                                {
                                    gg = kvs.Value[0]["CERI_MAIN_SIZE"].StringValue;
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                                {
                                    cz = kvs.Value[0]["CERI_MATERIAL"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("MATERIAL") != null)
                                    {
                                        cz = kvs.Value[0]["MATERIAL"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_CATALOG") != null)
                                {
                                    bzh = kvs.Value[0]["CERI_CATALOG"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("CATALOG_NAME") != null)
                                    {
                                        bzh = kvs.Value[0]["CATALOG_NAME"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("NOTES") != null)
                                {
                                    bz = kvs.Value[0]["NOTES"].StringValue;
                                }
                                bool b = BMECApi.Instance.InstanceDefinedAsClass(kvs.Value[0], "PIPE", true);
                                double dry_weight = 0;
                                if (b)
                                {
                                    if (kvs.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kvs.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                        dz = dry_weight;
                                    }
                                    else
                                    {
                                        if (kvs.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kvs.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                            dz = dry_weight;
                                        }
                                    }
                                    foreach (IECInstance iecz in kvs.Value)
                                    {
                                        //length += iec2["LENGTH"].DoubleValue / 1000;
                                        if (iecz.GetPropertyValue("LENGTH") != null)
                                        {
                                            nums += iecz["LENGTH"].DoubleValue / 1000;
                                        }
                                    }
                                    zz = dz * nums;
                                    dw = "米";
                                    zzW += zz;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kvs.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                                        dz = dry_weight;
                                    }
                                    else
                                    {
                                        if (kvs.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kvs.Value[0]["DRY_WEIGHT"].DoubleValue;
                                            dz = dry_weight;
                                        }
                                    }
                                    nums = kvs.Value.Count;
                                    zz = dz * nums;
                                    zzW += zz;
                                    dw = "个";
                                }

                                s.Cells[row, 3] = clmc;
                                s.Cells[row, 4] = xh;
                                s.Cells[row, 5] = gg;
                                s.Cells[row, 7] = cz;
                                s.Cells[row, 8] = dw;
                                s.Cells[row, 9] = nums;
                                s.Cells[row, 10] = dz;
                                if (isK)
                                {
                                    s.Cells[row, 11] = zz;
                                }
                                s.Cells[row, 12] = bzh;
                                s.Cells[row, 14] = bz;
                            }
                            if (!isK)
                            {
                                s.Cells[irow, 11] = zzW;
                            }
                        }
                    }
                    else
                    {
                        int index = 0, row = 6;
                        foreach (KeyValuePair<int, Dictionary<int, List<IECInstance>>> kv in itemList)
                        {
                            foreach (KeyValuePair<int, List<IECInstance>> kvs in kv.Value)
                            {
                                index++;
                                row++;
                                s.Cells[row, 1] = index;
                                string wlbm = "";
                                if (kvs.Value[0].GetPropertyValue("CERI_MAT_GRADE") != null)
                                {
                                    wlbm = kvs.Value[0]["CERI_MAT_GRADE"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("GRADE") != null)
                                    {
                                        wlbm = kvs.Value[0]["GRADE"].StringValue;
                                    }
                                }
                                s.Cells[row, 2] = wlbm;
                                string clmc = "", xh = "", gg = "", cz = "", dw = "", bzh = "", bz = "";
                                double dz = 0;
                                double nums = 0, zz = 0;
                                if (kvs.Value[0].GetPropertyValue("CERI_SHORT_DESC") != null)
                                {
                                    clmc = kvs.Value[0]["CERI_SHORT_DESC"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("SHORT_DESCRIPTION") != null)
                                    {
                                        clmc = kvs.Value[0]["SHORT_DESCRIPTION"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_PIECE_MARK") != null)
                                {
                                    xh = kvs.Value[0]["CERI_PIECE_MARK"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("PIECE_MARK") != null)
                                    {
                                        xh = kvs.Value[0]["PIECE_MARK"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_MAIN_SIZE") != null)
                                {
                                    gg = kvs.Value[0]["CERI_MAIN_SIZE"].StringValue;
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_MATERIAL") != null)
                                {
                                    cz = kvs.Value[0]["CERI_MATERIAL"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("MATERIAL") != null)
                                    {
                                        cz = kvs.Value[0]["MATERIAL"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("CERI_CATALOG") != null)
                                {
                                    bzh = kvs.Value[0]["CERI_CATALOG"].StringValue;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("CATALOG_NAME") != null)
                                    {
                                        bzh = kvs.Value[0]["CATALOG_NAME"].StringValue;
                                    }
                                }
                                if (kvs.Value[0].GetPropertyValue("NOTES") != null)
                                {
                                    bz = kvs.Value[0]["NOTES"].StringValue;
                                }
                                bool b = BMECApi.Instance.InstanceDefinedAsClass(kvs.Value[0], "PIPE", true);
                                double dry_weight = 0;
                                if (b)
                                {
                                    if (kvs.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kvs.Value[0]["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                                        dz = dry_weight;
                                    }
                                    else
                                    {
                                        if (kvs.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kvs.Value[0]["DRY_WEIGHT"].DoubleValue * 1000;
                                            dz = dry_weight;
                                        }
                                    }
                                    foreach (IECInstance iecz in kvs.Value)
                                    {
                                        //length += iec2["LENGTH"].DoubleValue / 1000;
                                        if (iecz.GetPropertyValue("LENGTH") != null)
                                        {
                                            nums += iecz["LENGTH"].DoubleValue / 1000;
                                        }
                                    }
                                    zz = dz * nums;
                                    dw = "米";
                                    //zzW += zz;
                                }
                                else
                                {
                                    if (kvs.Value[0].GetPropertyValue("CERI_WEIGHT_DRY") != null)
                                    {
                                        dry_weight = kvs.Value[0]["CERI_WEIGHT_DRY"].DoubleValue;
                                        dz = dry_weight;
                                    }
                                    else
                                    {
                                        if (kvs.Value[0].GetPropertyValue("DRY_WEIGHT") != null)
                                        {
                                            dry_weight = kvs.Value[0]["DRY_WEIGHT"].DoubleValue;
                                            dz = dry_weight;
                                        }
                                    }
                                    nums = kvs.Value.Count;
                                    zz = dz * nums;
                                    //zzW += zz;
                                    dw = "个";
                                }

                                s.Cells[row, 3] = clmc;
                                s.Cells[row, 4] = xh;
                                s.Cells[row, 5] = gg;
                                s.Cells[row, 7] = cz;
                                s.Cells[row, 8] = dw;
                                s.Cells[row, 9] = nums;
                                s.Cells[row, 10] = dz;
                                s.Cells[row, 11] = zz;
                                s.Cells[row, 12] = bzh;
                                s.Cells[row, 14] = bz;
                            }
                        }
                    }
                    wb.Save();
                    wb.Close();
                    wkb.Close();
                    app.Quit();
                    MOIE.Application app1 = new MOIE.Application();
                    MOIE.Workbooks wbs = app1.Workbooks;
                    MOIE.Workbook wb1 = app1.Workbooks.Open(excelPath);
                    app1.Visible = true;
                }
            }
        }

        private void qxcheckBox1_CheckedChanged(object sender, EventArgs e)
        {
            bool b = qxcheckBox1.Checked;
            FlcheckBox.Checked = b;
            gtcheckBox.Checked = b;
            mtcheckBox.Checked = b;
            otcheckBox.Checked = b;
            pecheckBox.Checked = b;
            cscheckBox.Checked = b;
            techeckBox1.Checked = b;
            ewcheckBox.Checked = b;
            fmcheckBox.Checked = b;
            ybcheckBox.Checked = b;
        }

        public ECInstanceList shaixuanEc()
        {
            ECInstanceList sxecList = new ECInstanceList();
            ECInstanceList ecList = DgnUtilities.GetAllInstancesFromDgn();

            if (radioButton2.Checked)
            {
                ecList = DgnUtilities.GetSelectedInstances();
            }

            if (dataGridView1.Rows.Count > 0)
            {
                List<string> pipeList = new List<string>();
                for (int i = 0; i < dataGridView1.Rows.Count; i++)
                {
                    bool isxz = Convert.ToBoolean(dataGridView1.Rows[i].Cells[0].Value);
                    if (isxz)
                    {
                        pipeList.Add(dataGridView1.Rows[i].Cells["PipeLineName"].Value.ToString());
                    }
                }
                if (pipeList.Count == 0)
                {
                    MessageBox.Show("请至少选择一个管线编号！");
                    return null;
                }
                ECInstanceList pecList = new ECInstanceList();
                foreach (IECInstance iecp in ecList)
                {
                    if (iecp.GetPropertyValue("LINENUMBER") != null)
                    {
                        string pipeName = iecp["LINENUMBER"].StringValue;
                        bool isp = pipeList.Contains(pipeName);
                        if (isp)
                        {
                            pecList.Add(iecp);
                        }
                    }
                }
                ecList = pecList;
            }

            foreach (IECInstance iec in ecList)
            {
                if (FlcheckBox.Checked)
                {
                    //bool b = BMECApi.Instance.InstanceDefinedAsClass(ec, "PIPING_COMPONENT", true);
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_FLANGE", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }
                if (gtcheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "GASKET", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }
                if (mtcheckBox.Checked)
                {
                    IECInstance[] proInstanceList = iec.ClassDefinition.GetCustomAttributes();
                    IECInstance proInstance = null;
                    foreach (IECInstance iecInstance in proInstanceList)
                    {
                        if (iecInstance.ClassDefinition.Name.Equals("OpenPlant_3D_Catalogue_ClassProperties"))
                        {
                            proInstance = iecInstance;
                            break;
                        }
                    }
                    if (proInstance != null)
                    {
                        if (proInstance.GetPropertyValue("Table") != null)
                        {
                            string tableName = proInstance["Table"].StringValue;
                            string[] tableList = tableName.Split(';');
                            bool b = tableList.Contains("Misc_Fit");
                            if (b)
                            {
                                bool iscz = sxecList.Contains(iec);
                                if (!iscz)
                                {
                                    sxecList.Add(iec);
                                }
                            }
                        }
                    }
                    bool b1 = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_CERI_COUPLING", true);
                    bool b2 = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_COUPLING", true);
                    bool b3 = BMECApi.Instance.InstanceDefinedAsClass(iec, "Coupling_ZJGBSJT", true);
                    bool b4 = BMECApi.Instance.InstanceDefinedAsClass(iec, "Coupling_ZJJT", true);
                    if (b1 || b2 || b3 || b4)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (otcheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "Olet", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (pecheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (cscheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_CROSS", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (techeckBox1.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_TEE", true);
                    bool b1 = BMECApi.Instance.InstanceDefinedAsClass(iec, "BASKET_STRAINER", true);
                    if (b || b1)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (ewcheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE_ELBOW", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (fmcheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "FLUID_REGULATOR", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }

                if (ybcheckBox.Checked)
                {
                    bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "FLOW_METER", true);
                    if (b)
                    {
                        bool iscz = sxecList.Contains(iec);
                        if (!iscz)
                        {
                            sxecList.Add(iec);
                        }
                    }
                }
            }

            return sxecList;
        }

        public void initialization()
        {
            MsName.Add("隔热材料表");
            MsName.Add("管道材料表");
            MsName.Add("管道造价表");
            MsName.Add("管道造价汇总表");
            MsName.Add("汇总材料表");
            List<string> grclbList = new List<string>();
            grclbList.Add("CQ-B3004-1909-6A管道隔热材料表（国内）");
            grclbList.Add("CQ-B3004-1909-6B管道隔热材料表（海外）");
            grclbList.Add("CQ-B3004-1909-13A压力管道隔热材料表（国内）");
            msJtName.Add("隔热材料表", grclbList);
            List<string> gdclbList = new List<string>();
            gdclbList.Add("CQ-B3004-1909-5A管道材料表（国内）");
            gdclbList.Add("CQ-B3004-1909-5B管道材料表（海外）");
            gdclbList.Add("CQ-B3004-1909-12A压力管道材料表（国内）");
            msJtName.Add("管道材料表", gdclbList);
            List<string> gdzjbList = new List<string>();
            gdzjbList.Add("管道造价表");
            msJtName.Add("管道造价表", gdzjbList);
            List<string> gdzjhzbList = new List<string>();
            gdzjhzbList.Add("管道造价汇总表");
            msJtName.Add("管道造价汇总表", gdzjhzbList);
            List<string> hzclbList = new List<string>();
            hzclbList.Add("CQ-B3004-1909-9A压力管道材料汇总表（国内）");
            msJtName.Add("汇总材料表", hzclbList);
        }

        private void zlcomboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            lxcomboBox1.DataSource = msJtName[zlcomboBox1.Text.ToString()];
            if (zlcomboBox1.Text.Equals("管道造价汇总表") || zlcomboBox1.Text.Equals("汇总材料表"))
            {
                wlbmGroupcheckBox1.Enabled = true;
            }
            else
            {
                wlbmGroupcheckBox1.Enabled = false;
            }
        }

        public bool grShaixuan(IECInstance iec, Dictionary<int, List<IECInstance>> iecgrList, out int key)
        {
            key = 0;
            bool isCz = true;
            string jzmc = "", wd = "", dh = "", cz = "";
            double pod = 0, hd = 0;
            int cs = 0;
            if (iec.GetPropertyValue("CERI_Media_Name") != null)
            {
                jzmc = iec["CERI_Media_Name"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_PIPE_OD_M") != null)
            {
                pod = iec["CERI_PIPE_OD_M"].DoubleValue;
            }
            else
            {
                if (iec.GetPropertyValue("OUTSIDE_DIAMETER") != null)
                {
                    pod = iec["OUTSIDE_DIAMETER"].DoubleValue;
                }
            }
            if (iec.GetPropertyValue("CERI_TEMP") != null)
            {
                wd = iec["CERI_TEMP"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_Insulation_code") != null)
            {
                dh = iec["CERI_Insulation_code"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_Insulation_Materia") != null)
            {
                cz = iec["CERI_Insulation_Materia"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("MATERIAL") != null)
                {
                    cz = iec["MATERIAL"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_Layer") != null)
            {
                cs = iec["CERI_Layer"].IntValue;
            }
            if (iec.GetPropertyValue("CERI_Insulation_Thickness") != null)
            {
                hd = iec["CERI_Insulation_Thickness"].DoubleValue;
            }
            else
            {
                if (iec.GetPropertyValue("INSULATION_THICKNESS") != null)
                {
                    hd = iec["INSULATION_THICKNESS"].DoubleValue;
                }
            }
            foreach (KeyValuePair<int, List<IECInstance>> kv in iecgrList)
            {
                foreach (IECInstance pdiec in kv.Value)
                {
                    string jzmc1 = "", wd1 = "", dh1 = "", cz1 = "";
                    double pod1 = 0, hd1 = 0;
                    int cs1 = 0;
                    if (pdiec.GetPropertyValue("CERI_Media_Name") != null)
                    {
                        jzmc1 = pdiec["CERI_Media_Name"].StringValue;
                    }
                    if (pdiec.GetPropertyValue("CERI_PIPE_OD_M") != null)
                    {
                        pod1 = pdiec["CERI_PIPE_OD_M"].DoubleValue;
                    }
                    else
                    {
                        if (pdiec.GetPropertyValue("OUTSIDE_DIAMETER") != null)
                        {
                            pod1 = pdiec["OUTSIDE_DIAMETER"].DoubleValue;
                        }
                    }
                    if (pdiec.GetPropertyValue("CERI_TEMP") != null)
                    {
                        wd1 = pdiec["CERI_TEMP"].StringValue;
                    }
                    if (pdiec.GetPropertyValue("CERI_Insulation_code") != null)
                    {
                        dh1 = pdiec["CERI_Insulation_code"].StringValue;
                    }
                    if (pdiec.GetPropertyValue("CERI_Insulation_Materia") != null)
                    {
                        cz1 = pdiec["CERI_Insulation_Materia"].StringValue;
                    }
                    else
                    {
                        if (pdiec.GetPropertyValue("MATERIAL") != null)
                        {
                            cz1 = pdiec["MATERIAL"].StringValue;
                        }
                    }
                    if (pdiec.GetPropertyValue("CERI_Layer") != null)
                    {
                        cs1 = pdiec["CERI_Layer"].IntValue;
                    }
                    if (pdiec.GetPropertyValue("CERI_Insulation_Thickness") != null)
                    {
                        hd1 = pdiec["CERI_Insulation_Thickness"].DoubleValue;
                    }
                    else
                    {
                        if (pdiec.GetPropertyValue("INSULATION_THICKNESS") != null)
                        {
                            hd1 = pdiec["INSULATION_THICKNESS"].DoubleValue;
                        }
                    }
                    if (jzmc == jzmc1 && pod == pod1 && wd == wd1 && dh == dh1 && cz == cz1 && cs == cs1 && hd == hd1)
                    {
                        isCz = false;
                        key = kv.Key;
                    }
                }
            }
            return isCz;
        }

        public bool zjBj(IECInstance iec, IECInstance iec1)
        {
            bool isXt = false;
            //NOTES备注
            string xtbh = "", xtmc = "", clmc = "", ggxh = "", gdcz = "", dw = "", bz = "", wlbm = "";
            double dz = 0;
            if (iec.GetPropertyValue("CERI_MAT_GRADE") != null)
            {
                wlbm = iec["CERI_MAT_GRADE"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("GRADE") != null)
                {
                    wlbm = iec["GRADE"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_System_Number") != null)
            {
                xtbh = iec["CERI_System_Number"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("UNIT") != null)
                {
                    xtbh = iec["UNIT"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_System_Name") != null)
            {
                xtmc = iec["CERI_System_Name"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_SHORT_DESC") != null)
            {
                clmc = iec["CERI_SHORT_DESC"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("SHORT_DESCRIPTION") != null)
                {
                    clmc = iec["SHORT_DESCRIPTION"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_MAIN_SIZE") != null)
            {
                ggxh = iec["CERI_MAIN_SIZE"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_MATERIAL") != null)
            {
                gdcz = iec["CERI_MATERIAL"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("MATERIAL") != null)
                {
                    gdcz = iec["MATERIAL"].StringValue;
                }
            }
            if (iec.GetPropertyValue("NOTES") != null)
            {
                bz = iec["NOTES"].StringValue;
            }
            bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE", true);
            double dry_weight = 0;
            if (b)
            {
                if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                    dz = dry_weight;
                }
                else
                {
                    if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight = iec["DRY_WEIGHT"].DoubleValue * 1000;
                        dz = dry_weight;
                    }
                }
                dw = "米";
            }
            else
            {
                if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue;
                    dz = dry_weight;
                }
                else
                {
                    if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight = iec["DRY_WEIGHT"].DoubleValue;
                        dz = dry_weight;
                    }
                }
                dw = "个";
            }

            string xtbh1 = "", xtmc1 = "", clmc1 = "", ggxh1 = "", gdcz1 = "", dw1 = "", bz1 = "", wlbm1 = "";
            double dz1 = 0;
            if (iec1.GetPropertyValue("CERI_MAT_GRADE") != null)
            {
                wlbm1 = iec1["CERI_MAT_GRADE"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("GRADE") != null)
                {
                    wlbm1 = iec1["GRADE"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_System_Number") != null)
            {
                xtbh1 = iec1["CERI_System_Number"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("UNIT") != null)
                {
                    xtbh1 = iec1["UNIT"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_System_Name") != null)
            {
                xtmc1 = iec1["CERI_System_Name"].StringValue;
            }
            if (iec1.GetPropertyValue("CERI_SHORT_DESC") != null)
            {
                clmc1 = iec1["CERI_SHORT_DESC"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("SHORT_DESCRIPTION") != null)
                {
                    clmc1 = iec1["SHORT_DESCRIPTION"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_MAIN_SIZE") != null)
            {
                ggxh1 = iec1["CERI_MAIN_SIZE"].StringValue;
            }
            if (iec1.GetPropertyValue("CERI_MATERIAL") != null)
            {
                gdcz1 = iec1["CERI_MATERIAL"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("MATERIAL") != null)
                {
                    gdcz1 = iec1["MATERIAL"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("NOTES") != null)
            {
                bz1 = iec1["NOTES"].StringValue;
            }
            bool b1 = BMECApi.Instance.InstanceDefinedAsClass(iec1, "PIPE", true);
            double dry_weight1 = 0;
            if (b1)
            {
                if (iec1.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight1 = iec1["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                    dz1 = dry_weight1;
                }
                else
                {
                    if (iec1.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight1 = iec1["DRY_WEIGHT"].DoubleValue * 1000;
                        dz1 = dry_weight1;
                    }
                }
                dw1 = "米";
            }
            else
            {
                if (iec1.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight1 = iec1["CERI_WEIGHT_DRY"].DoubleValue;
                    dz1 = dry_weight1;
                }
                else
                {
                    if (iec1.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight1 = iec1["DRY_WEIGHT"].DoubleValue;
                        dz1 = dry_weight1;
                    }
                }
                dw1 = "个";
            }
            //string xtbh1 = "", xtmc1 = "", clmc1 = "", ggxh1 = "", gdcz1 = "", dw1 = "", bz1 = "", wlbm1 = "";
            //double dz1 = 0;
            if (xtbh == xtbh1 && xtmc == xtmc1 && clmc == clmc1 && ggxh == ggxh1 && gdcz == gdcz1 && dw == dw1 && bz == bz1 && wlbm == wlbm1 && dz == dz1)
            {
                isXt = true;
            }
            return isXt;
        }

        public bool hzPd(IECInstance iec, IECInstance iec1)
        {
            bool isY = false;
            string clmc = "", xh = "", gg = "", cz = "", dw = "", bzh = "", bz = "";
            double dz = 0;
            if (iec.GetPropertyValue("CERI_SHORT_DESC") != null)
            {
                clmc = iec["CERI_SHORT_DESC"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("SHORT_DESCRIPTION") != null)
                {
                    clmc = iec["SHORT_DESCRIPTION"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_PIECE_MARK") != null)
            {
                xh = iec["CERI_PIECE_MARK"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("PIECE_MARK") != null)
                {
                    xh = iec["PIECE_MARK"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_MAIN_SIZE") != null)
            {
                gg = iec["CERI_MAIN_SIZE"].StringValue;
            }
            if (iec.GetPropertyValue("CERI_MATERIAL") != null)
            {
                cz = iec["CERI_MATERIAL"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("MATERIAL") != null)
                {
                    cz = iec["MATERIAL"].StringValue;
                }
            }
            if (iec.GetPropertyValue("CERI_CATALOG") != null)
            {
                bzh = iec["CERI_CATALOG"].StringValue;
            }
            else
            {
                if (iec.GetPropertyValue("CATALOG_NAME") != null)
                {
                    bzh = iec["CATALOG_NAME"].StringValue;
                }
            }
            if (iec.GetPropertyValue("NOTES") != null)
            {
                bz = iec["NOTES"].StringValue;
            }
            bool b = BMECApi.Instance.InstanceDefinedAsClass(iec, "PIPE", true);
            double dry_weight = 0;
            if (b)
            {
                if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                    dz = dry_weight;
                }
                else
                {
                    if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight = iec["DRY_WEIGHT"].DoubleValue * 1000;
                        dz = dry_weight;
                    }
                }
                dw = "米";
            }
            else
            {
                if (iec.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight = iec["CERI_WEIGHT_DRY"].DoubleValue;
                    dz = dry_weight;
                }
                else
                {
                    if (iec.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight = iec["DRY_WEIGHT"].DoubleValue;
                        dz = dry_weight;
                    }
                }
                dw = "个";
            }
            string clmc1 = "", xh1 = "", gg1 = "", cz1 = "", dw1 = "", bzh1 = "", bz1 = "";
            double dz1 = 0;
            if (iec1.GetPropertyValue("CERI_SHORT_DESC") != null)
            {
                clmc1 = iec1["CERI_SHORT_DESC"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("SHORT_DESCRIPTION") != null)
                {
                    clmc1 = iec1["SHORT_DESCRIPTION"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_PIECE_MARK") != null)
            {
                xh1 = iec1["CERI_PIECE_MARK"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("PIECE_MARK") != null)
                {
                    xh1 = iec1["PIECE_MARK"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_MAIN_SIZE") != null)
            {
                gg1 = iec1["CERI_MAIN_SIZE"].StringValue;
            }
            if (iec1.GetPropertyValue("CERI_MATERIAL") != null)
            {
                cz1 = iec1["CERI_MATERIAL"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("MATERIAL") != null)
                {
                    cz1 = iec1["MATERIAL"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("CERI_CATALOG") != null)
            {
                bzh1 = iec1["CERI_CATALOG"].StringValue;
            }
            else
            {
                if (iec1.GetPropertyValue("CATALOG_NAME") != null)
                {
                    bzh1 = iec1["CATALOG_NAME"].StringValue;
                }
            }
            if (iec1.GetPropertyValue("NOTES") != null)
            {
                bz1 = iec1["NOTES"].StringValue;
            }
            bool b1 = BMECApi.Instance.InstanceDefinedAsClass(iec1, "PIPE", true);
            double dry_weight1 = 0;
            if (b1)
            {
                if (iec1.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight1 = iec1["CERI_WEIGHT_DRY"].DoubleValue * 1000;
                    dz1 = dry_weight1;
                }
                else
                {
                    if (iec1.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight1 = iec1["DRY_WEIGHT"].DoubleValue * 1000;
                        dz1 = dry_weight1;
                    }
                }
                dw1 = "米";
            }
            else
            {
                if (iec1.GetPropertyValue("CERI_WEIGHT_DRY") != null)
                {
                    dry_weight1 = iec1["CERI_WEIGHT_DRY"].DoubleValue;
                    dz1 = dry_weight1;
                }
                else
                {
                    if (iec1.GetPropertyValue("DRY_WEIGHT") != null)
                    {
                        dry_weight1 = iec1["DRY_WEIGHT"].DoubleValue;
                        dz1 = dry_weight1;
                    }
                }
                dw1 = "个";
            }
            if (clmc == clmc1 && xh == xh1 && gg == gg1 && cz == cz1 && dw == dw1 && bzh == bzh1 && bz == bz1 && dz == dz1)
            {
                isY = true;
            }
            return isY;
        }
    }

    /// <summary>
    /// 元件属性类
    /// </summary>
    public class pipingPro
    {
        /// <summary>
        /// 管线编号
        /// </summary>
        public string pipeLineName { get; set; }

        /// <summary>
        /// 元件名称
        /// </summary>
        public string ecName { get; set; }

        /// <summary>
        /// DN
        /// </summary>
        public double DN { get; set; }
    }
}
