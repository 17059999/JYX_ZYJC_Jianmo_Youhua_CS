parameters:
  build.buildPipelineParameters: ""
  build.buildPipelineName: ""
  build.targetRepoBranch: ""
  build.upstreamBuildIdVariableName: ""
  build.archiveName: ""
  codeSign.productName: ""

steps:
  - checkout: self

  - task: PowerShell@2
    name: Queue_Test_Suite_Build
    displayName: "Queue Test Suite Build"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common/Queue-SinglePipelineWithParameters.ps1"
      arguments: '-AccessToken "$(System.AccessToken)" -ApiUrl "$(build.apiUrl)" -PipelineName "${{parameters[''build.buildPipelineName'']}}" -TargetRepoBranch "${{parameters[''build.targetRepoBranch'']}}" -PipelineParameters "${{parameters[''build.buildPipelineParameters'']}}" -BuildIdVariableName "${{parameters[''build.upstreamBuildIdVariableName'']}}"'
      workingDirectory: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common"
    condition: succeeded()

  - task: PowerShell@2
    displayName: "Wait Test Suite Build Completion"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common/Wait-SinglePipelineCompletionByBuildId.ps1"
      arguments: '-AccessToken "$(System.AccessToken)" -ApiUrl "$(build.apiUrl)" -BuildId "$(${{parameters[''build.upstreamBuildIdVariableName'']}})"'
      workingDirectory: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common"
    condition: succeeded()

  - task: PowerShell@2
    displayName: "Get Test Suite Archive"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common/Get-DotNetCoreArtifactByBuildId.ps1"
      arguments: '-AccessToken "$(System.AccessToken)" -ApiUrl "$(build.apiUrl)" -BuildId "$(${{parameters[''build.upstreamBuildIdVariableName'']}})" -FileName "${{parameters[''build.archiveName'']}}" -ArtifactLocalPath "$(Build.ArtifactStagingDirectory)/staging"'
      workingDirectory: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common"
    condition: succeeded()

  - task: PowerShell@2
    displayName: "Expand Test Suite Archive"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common/Expand-DotNetCoreZipArchive.ps1"
      arguments: '-ApiUrl "$(build.apiUrl)" -ArchiveName "${{parameters[''build.archiveName'']}}" -ArtifactLocalPath "$(Build.ArtifactStagingDirectory)/staging"'
      workingDirectory: "$(Build.Repository.LocalPath)/RegressionRunScripts/Common"
    condition: succeeded()

  - task: PowerShell@2
    displayName: "Get Files to be Signed"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/CodeSign/Get-CodeSigningFiles.ps1"
      arguments: '-ExpandedArchivePath "$(Build.ArtifactStagingDirectory)/staging/${{parameters[''build.archiveName'']}}" -ProductName "${{parameters[''codeSign.productName'']}}" -CodeSigningFilesPath "./CodeSigningFiles.json"'
      workingDirectory: "$(Build.Repository.LocalPath)/CodeSign"
    condition: succeeded()

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@5
    displayName: "ESRP CodeSigning"
    inputs:
      ConnectedServiceName: 'ESRP Signing PME' 
      AppRegistrationClientId: '9918f9a7-6fb4-4f09-8198-5e0ab841d861' 
      AppRegistrationTenantId: '72f988bf-86f1-41af-91ab-2d7cd011db47' 
      AuthAKVName: 'protocol-test-suites-kv' 
      AuthCertName: 'Protocol-Test-Suites-Signing' 
      AuthSignCertName: 'ESRP_Signing_PME'
      FolderPath: "$(Build.ArtifactStagingDirectory)/staging/${{parameters['build.archiveName']}}"
      Pattern: "$(codeSign.codeSigningFiles)"
      SessionTimeout: 90 
      ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v2' 
      MaxConcurrency: 25
      signConfigTYpe: 'inlineSignParams'
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters":
              {
                "OpusName": "Microsoft",
                "OpusInfo": "http://www.microsoft.com",
                "FileDigest": '/fd "SHA256"',
                "PageHash": "/NPH",
                "TimeStamp": '/tr "http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer" /td sha256'
              },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]
    condition: succeeded()

  - task: PowerShell@2
    displayName: "ESRP CodeSigning Verification"
    inputs:
      targetType: filePath
      filePath: "$(Build.Repository.LocalPath)/CodeSign/Verify-ExpandedDotNetCoreArchive.ps1"
      arguments: '-ArchiveName "${{parameters[''build.archiveName'']}}" -ExpandedArchivePath "$(Build.ArtifactStagingDirectory)/staging/${{parameters[''build.archiveName'']}}" -CodeSigningFilesPath "./CodeSigningFiles.json" -SignerSubject "$(codeSign.signerSubject)" -ReportRootPath "$(Build.ArtifactStagingDirectory)/drop"'
      workingDirectory: "$(Build.Repository.LocalPath)/CodeSign"
    condition: succeeded()

  - task: ArchiveFiles@2
    displayName: "Archive as Zip for: $(Build.ArtifactStagingDirectory)/staging/${{parameters['build.archiveName']}}"
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/staging/${{parameters['build.archiveName']}}"
      includeRootFolder: false
      archiveFile: "$(Build.ArtifactStagingDirectory)/drop/${{parameters['build.archiveName']}}.zip"
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifacts"
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/drop"
    condition: succeeded()

  - task: PowerShell@2
    displayName: "Verify Report Status"
    inputs:
      targetType: inline
      script: |
        Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)/drop" -Filter "*.CodeSignVerification.html" | Foreach-Object { ./Check-HtmlReport.ps1 -ReportPath $_.FullName }
      workingDirectory: "$(Build.Repository.LocalPath)/CodeSign"
    condition: succeeded()
